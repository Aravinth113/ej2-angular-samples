{"common/shared.module":"import { NgModule } from '@angular/core';\nimport { ButtonModule } from '@syncfusion/ej2-ng-buttons';\nimport { ListViewModule } from '@syncfusion/ej2-ng-lists';\nimport { DropDownListModule } from '@syncfusion/ej2-ng-dropdowns';\nimport { TreeViewModule, TabModule } from '@syncfusion/ej2-ng-navigations';\n\n\n\n@NgModule({\n    imports: [\n        ButtonModule,\n        ListViewModule,\n        DropDownListModule,\n        TreeViewModule,\n        TabModule\n\n    ],\n    \n    exports: [\n        ButtonModule,\n        TreeViewModule,\n        ListViewModule,\n        DropDownListModule,\n        TabModule\n    ]\n})\nexport class SharedModule { }","app.module":"import { ColumnSpanningComponent } from './columnspanning.component';\n\n\n\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\nimport { NgModule, Type, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HttpModule } from '@angular/http';\nimport { GridAllModule } from '@syncfusion/ej2-ng-grids';\nimport { NumericTextBoxAllModule } from '@syncfusion/ej2-ng-inputs';\nimport { ToolbarModule } from '@syncfusion/ej2-ng-navigations';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { SharedModule } from './common/shared.module';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [CommonModule, HttpModule, ToolbarModule, GridAllModule, SharedModule, NumericTextBoxAllModule, HttpModule, JsonpModule, BrowserModule],\ndeclarations: [ColumnSpanningComponent],\nbootstrap: [ColumnSpanningComponent]\n})\nexport class AppModule { }","columnspanning.component":"import { Component, OnInit } from '@angular/core';\nimport { QueryCellInfoEventArgs } from '@syncfusion/ej2-ng-grids';\nimport { columnSpanData, ColumnSpanDataType } from './data';\nimport { EmitType } from '@syncfusion/ej2-base';\n\n@Component({\n    selector: 'control-content',\n    templateUrl: 'columnspanning.html'\n})\nexport class ColumnSpanningComponent implements OnInit {\n    public data: Object[];\n    public height: string | number;\n    public width: string | number;\n    public gridLines: string;\n    public textWrap: boolean;\n    public queryCellInfoEvent: EmitType<QueryCellInfoEventArgs> = (args: QueryCellInfoEventArgs) => {\n        let data: ColumnSpanDataType = args.data as ColumnSpanDataType;\n        switch (data.EmployeeID) {\n            case 10001:\n                if (args.column.field === '9:00' || args.column.field === '2:30' || args.column.field === '4:30') {\n                    args.colSpan = 2;\n                } else if (args.column.field === '11:00') {\n                    args.colSpan = 3;\n                }\n                break;\n            case 10002:\n                if (args.column.field === '9:30' || args.column.field === '2:30' ||\n                    args.column.field === '4:30') {\n                    args.colSpan = 3;\n                } else if (args.column.field === '11:00') {\n                    args.colSpan = 4;\n                }\n                break;\n            case 10003:\n                if (args.column.field === '9:00' || args.column.field === '11:30') {\n                    args.colSpan = 3;\n                } else if (args.column.field === '10:30' || args.column.field === '3:30' ||\n                    args.column.field === '4:30' || args.column.field === '2:30') {\n                    args.colSpan = 2;\n                }\n                break;\n            case 10004:\n                if (args.column.field === '9:00') {\n                    args.colSpan = 3;\n                } else if (args.column.field === '11:00') {\n                    args.colSpan = 4;\n                } else if (args.column.field === '4:00' || args.column.field === '2:30') {\n                    args.colSpan = 2;\n                }\n                break;\n            case 10005:\n                if (args.column.field === '9:00') {\n                    args.colSpan = 4;\n                } else if (args.column.field === '11:30') {\n                    args.colSpan = 3;\n                } else if (args.column.field === '3:30' || args.column.field === '4:30' || args.column.field === '2:30') {\n                    args.colSpan = 2;\n                }\n                break;\n            case 10006:\n                if (args.column.field === '9:00' || args.column.field === '4:30' ||\n                    args.column.field === '2:30' || args.column.field === '3:30') {\n                    args.colSpan = 2;\n                } else if (args.column.field === '10:00' || args.column.field === '11:30') {\n                    args.colSpan = 3;\n                }\n                break;\n            case 10007:\n                if (args.column.field === '9:00' || args.column.field === '3:00' || args.column.field === '10:30') {\n                    args.colSpan = 2;\n                } else if (args.column.field === '11:30' || args.column.field === '4:00') {\n                    args.colSpan = 3;\n                }\n                break;\n            case 10008:\n                if (args.column.field === '9:00' || args.column.field === '10:30' || args.column.field === '2:30') {\n                    args.colSpan = 3;\n                } else if (args.column.field === '4:00') {\n                    args.colSpan = 2;\n                }\n                break;\n            default:\n                this.extendQueryCellEvent(args, data.EmployeeID);\n        }\n    };\n    public extendQueryCellEvent: EmitType<QueryCellInfoEventArgs> = (args: QueryCellInfoEventArgs, value: number) => {\n        switch (value) {\n            case 10009:\n                if (args.column.field === '9:00' || args.column.field === '11:30') {\n                    args.colSpan = 3;\n                } else if (args.column.field === '4:30' || args.column.field === '2:30') {\n                    args.colSpan = 2;\n                }\n                break;\n            case 100010:\n                if (args.column.field === '9:00' || args.column.field === '2:30' ||\n                    args.column.field === '4:00' || args.column.field === '11:30') {\n                    args.colSpan = 3;\n                } else if (args.column.field === '10:30') {\n                    args.colSpan = 2;\n                }\n                break;\n        }\n    };\n    ngOnInit(): void {\n        this.data = columnSpanData;\n        this.gridLines = 'both';\n        this.height = 'auto';\n        this.width = 'auto';\n        this.textWrap = true\n    }\n}","columnspanning.html":"<div class=\"control-section\">\n    <ej-grid [dataSource]='data' [height]='height' [width]='width' [gridLines]='gridLines' [allowTextWrap]='textWrap' (queryCellInfo)='queryCellInfoEvent($event)'>\n        <e-columns>\n            <e-column field='EmployeeID' headerText='Employee ID' width='150' textAlign=\"right\" isPrimaryKey={true}></e-column>\n            <e-column field='EmployeeName' headerText='Employee Name' width='200'></e-column>\n            <e-column field='9:00' headerText='9:00 AM' width='120'></e-column>\n            <e-column field='9:30' headerText='9:30 AM' width='120'></e-column>\n            <e-column field='10:00' headerText='10:00 AM' width='120'></e-column>\n            <e-column field='10:30' headerText='10:30 AM' width='120'></e-column>\n            <e-column field='11:00' headerText='11:00 AM' width='120'></e-column>\n            <e-column field='11:30' headerText='11:30 AM' width='120'></e-column>\n            <e-column field='12:00' headerText='12:00 PM' width='120'></e-column>\n            <e-column field='12:30' headerText='12:30 PM' width='120'></e-column>\n            <e-column field='2:30' headerText='2:30 PM' width='120'></e-column>\n            <e-column field='3:00' headerText='3:00 PM' width='120'></e-column>\n            <e-column field='3:30' headerText='3:30 PM' width='120'></e-column>\n            <e-column field='4:00' headerText='4:00 PM' width='120'></e-column>\n            <e-column field='4:30' headerText='4:30 PM' width='120'></e-column>\n            <e-column field='5:00' headerText='5:00 PM' width='120'></e-column>\n        </e-columns>\n    </ej-grid>\n</div>","index.html":"<!DOCTYPE html>\n<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <meta charset=\"UTF-8\">\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\n        \n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}