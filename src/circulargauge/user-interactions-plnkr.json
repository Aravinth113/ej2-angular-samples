{"app.module":"import { UserInteractionComponent } from './user-interactions.component';\n\n\n\n\n\n\n\n\n\n\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\n/**\n * Circulargauge Control\n */\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\n\nimport { CircularGaugeAllModule } from '@syncfusion/ej2-ng-circulargauge';\nimport { GridModule } from '@syncfusion/ej2-ng-grids';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [CircularGaugeAllModule, GridModule, HttpModule, JsonpModule, BrowserModule],\ndeclarations: [UserInteractionComponent],\nbootstrap: [UserInteractionComponent]\n})\nexport class AppModule { }","user-interactions.component":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { IPointerDragEventArgs, CircularGaugeComponent } from '@syncfusion/ej2-ng-circulargauge';\nimport { getRangeColor, Range } from '@syncfusion/ej2-circulargauge';\n\n/**\n * user interaction in gauge\n */\n@Component({\n    selector: 'control-content',\n    templateUrl: 'user-interactions.html',\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class UserInteractionComponent {\n    @ViewChild('circulargauge')\n    public circulargauge: CircularGaugeComponent;\n    public content: string = '<div style=\"font-size: 14px;color:#E5C31C;font-weight: lighter;font-style: oblique;\"><span>';\n    public pointerValue: number;\n\n    public lineStyle: Object = { width: 0, color: '#9E9E9E' };\n    public labelStyle: Object = {\n        useRangeColor: true\n    };\n\n    public majorTicks: Object = {\n        useRangeColor: true\n    };\n    public content1: string = '<div style=\"font-size: 14px;color:#E5C31C;font-weight: lighter;font-style: oblique;\"><span>70 km/h</span></div>';\n    public minorTicks: Object = {\n        useRangeColor: true\n    };public dragMove(args: IPointerDragEventArgs): void {\n        this.pointerValue = Math.round(args.currentValue);\n        document.getElementById('pointerValue').innerHTML = 'Pointer Value <span> &nbsp;&nbsp;&nbsp;' + this.pointerValue;\n        (<HTMLInputElement>document.getElementById('value')).value = this.pointerValue.toString();\n        this.circulargauge.setAnnotationValue(0, 0, this.content + this.pointerValue + ' km/h</span></div>');\n    };\n    public dragEnd(args: IPointerDragEventArgs): void {\n        this.pointerValue = Math.round(args.currentValue);\n        this.setPointersValue(this.circulargauge, this.pointerValue);\n    };\n\n    public markerHeight: number = 20;\n    public markerWidth: number = 20;\n    public rangeWidth: number = 8;\n    public cap: Object = { radius: 10, border: { width: 5, color: '#E5C31C' } };\n    public tail: Object = { length: '0%', color: '#E5C31C' };\n    public animation: Object = { enable: true, duration: 500 };\n    public setPointersValue(circulargauge: CircularGaugeComponent, pointerValue: number): void {\n        let color: string = getRangeColor(pointerValue, <Range[]>(circulargauge.axes[0].ranges), circulargauge.axes[0].pointers[0].color);\n        circulargauge.axes[0].pointers[0].color = color;\n        circulargauge.axes[0].pointers[1].color = color;\n        circulargauge.axes[0].pointers[0].animation.enable = true;\n        circulargauge.axes[0].pointers[1].animation.enable = true;\n        circulargauge.axes[0].pointers[0].needleTail.color = color;\n        circulargauge.axes[0].pointers[1].needleTail.color = color;\n        circulargauge.axes[0].pointers[0].cap.border.color = color;\n        circulargauge.axes[0].pointers[1].cap.border.color = color;\n        circulargauge.setPointerValue(0, 1, pointerValue);\n        circulargauge.setPointerValue(0, 0, pointerValue);\n        this.content = '<div style=\"font-size: 14px;color:' + color + ';font-weight: lighter;font-style: oblique;\"><span>';\n        circulargauge.setAnnotationValue(0, 0, this.content + pointerValue + ' km/h</span></div>');\n    }\n    ngAfterViewInit(): void {\n        document.getElementById('value').onpointermove = document.getElementById('value').ontouchmove =\n            document.getElementById('value').onchange = () => {\n                let value: number = parseInt((<HTMLInputElement>document.getElementById('value')).value, 10);\n                document.getElementById('pointerValue').innerHTML = 'Pointer Value <span> &nbsp;&nbsp;&nbsp;' + value;\n                this.setPointersValue(this.circulargauge, value);\n            };\n\n        document.getElementById('enable').onchange = () => {\n            let value: boolean = (<HTMLInputElement>document.getElementById('enable')).checked;\n            this.circulargauge.enablePointerDrag = value;\n        };\n    }\n    ;\n}","user-interactions.html":"<div class=\"control-section\">\n    <div class=\"col-md-8\">\n        <ej-circulargauge style='display:block;' #circulargauge enablePointerDrag=true (dragMove)='dragMove($event)' (dragEnd)='dragEnd($event)'\n            background='transparent'>\n            <e-axes>\n                <e-axis startAngle=220 endAngle=140 [lineStyle]=lineStyle [labelStyle]=labelStyle [majorTicks]=majorTicks [minorTicks]=minorTicks\n                    radius='80%' minimum=0 maximum=120>\n                    <e-annotations>\n                        <e-annotation [content]='content1' radius='45%' angle=180 zIndex='1'>\n                        </e-annotation>\n                    </e-annotations>\n                    <e-ranges>\n                        <e-range start=0 end=40 [startWidth]=\"rangeWidth\" [endWidth]=\"rangeWidth\" radius='108%' color=\"#30B32D\">\n                        </e-range>\n                        <e-range start=40 end=100 [startWidth]=\"rangeWidth\" [endWidth]=\"rangeWidth\" radius='108%' color=\"#E5C31C\">\n                        </e-range>\n                        <e-range start=100 end=120 [startWidth]=\"rangeWidth\" [endWidth]=\"rangeWidth\" radius='108%' color=\"#F03E3E\">\n                        </e-range>\n                    </e-ranges>\n                    <e-pointers>\n                        <e-pointer type='Marker' value=70 markerShape='InvertedTriangle' radius='110%' [markerHeight]='markerHeight' color='#E5C31C'\n                            [markerWidth]='markerWidth'>\n                        </e-pointer>\n                        <e-pointer value=70 radius='60%' color='#E5C31C' [cap]='cap' [needleTail]='tail' markerWidth=5>\n                        </e-pointer>\n                    </e-pointers>\n                </e-axis>\n            </e-axes>\n        </ej-circulargauge>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" title=\"Properties\" class=\"property-panel-table\" style=\"width: 100%; margin:10px\">\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 30%\">\n                            <div id='pointerValue'>Pointer Value <span> &nbsp;&nbsp;&nbsp;70</span> </div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div>\n                                <input type=\"range\" id=\"value\" value=\"70\" min=\"0\" max=\"180\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 20%\">\n                            <div id='enablePointer'>Enable Drag</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div>\n                                <input type=\"checkbox\" id=\"enable\" checked=\"true\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>","index.html":"<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n\n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}