{"app.module":"import { LabelComponent } from './label.component';\n\n\n\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\n/**\n * Circulargauge Control\n */\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\n\nimport { CircularGaugeAllModule } from '@syncfusion/ej2-ng-circulargauge';\nimport { GridModule } from '@syncfusion/ej2-ng-grids';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [CircularGaugeAllModule, GridModule, HttpModule, JsonpModule, BrowserModule],\ndeclarations: [LabelComponent],\nbootstrap: [LabelComponent]\n})\nexport class AppModule { }","label.component":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { CircularGaugeComponent } from '@syncfusion/ej2-ng-circulargauge';\nimport { Position, TickModel } from '@syncfusion/ej2-circulargauge';\n\n/**\n * multiple axis in gauge\n */\n\n@Component({\n    selector: 'control-content',\n    templateUrl: 'label.html',\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class LabelComponent {\n    @ViewChild('label')\n    public circulargauge: CircularGaugeComponent;\n    public isMajorTicks: boolean = true;\n\n    public margin: Object = {\n        left: 0, right: 0, top: 0, bottom: 0\n    };\n    public border: Object = { color: 'transparent', width: 4 };\n    public lineStyle1: Object = {\n        width: 2, color: '#9E9E9E'\n    };\n\n    public labelStyle1: Object = {\n        position: 'Outside', autoAngle: true,\n        font: {\n            size: '10px', color: '#333333'\n        }\n    };\n    public majorTicks1: Object = {\n        position: 'Inside', color: '#757575', width: 2, height: 10, interval: 20\n    };\n    public minorTicks1: Object = {\n        position: 'Inside', color: '#757575', height: 5, width: 2, interval: 10\n    };\n\n    public ranges: Object[] = [{\n        start: 0, end: 145,\n        color: '#8BC34A', radius: '60%'\n    }];\n    public pointers: Object[] = [];\n    ngAfterViewInit(): void {\n        document.getElementById('Ticks').onchange = () => {\n            let value: string = (<HTMLInputElement>document.getElementById('Ticks')).value;\n            let tick: TickModel;\n            this.isMajorTicks = value === 'major';\n            if (this.isMajorTicks) {\n                tick = this.circulargauge.axes[0].majorTicks;\n            } else {\n                tick = this.circulargauge.axes[0].minorTicks;\n            }\n            (<HTMLInputElement>document.getElementById('tickposition')).value = tick.position;\n            (<HTMLInputElement>document.getElementById('tickOffset')).value = tick.offset.toString();\n            (<HTMLInputElement>document.getElementById('tickHeight')).value = tick.height.toString();\n            document.getElementById('offset').innerHTML = 'Tick Offset <span>&nbsp;&nbsp;&nbsp;' + tick.offset;\n            document.getElementById('height').innerHTML = 'Tick Height <span>&nbsp;&nbsp;&nbsp;' + tick.height;\n        };\n\n        document.getElementById('tickposition').onchange = () => {\n            let value: string = (<HTMLInputElement>document.getElementById('tickposition')).value;\n            if (this.isMajorTicks) {\n                this.circulargauge.axes[0].majorTicks.position = <Position>value;\n            } else {\n                this.circulargauge.axes[0].minorTicks.position = <Position>value;\n            }\n            this.circulargauge.refresh();\n        };\n\n        document.getElementById('labelposition').onchange = () => {\n            let value: string = (<HTMLInputElement>document.getElementById('labelposition')).value;\n            this.circulargauge.axes[0].labelStyle.position = <Position>value;\n            this.circulargauge.refresh();\n        };\n\n        document.getElementById('tickOffset').onpointermove = document.getElementById('tickOffset').ontouchmove =\n            document.getElementById('tickOffset').onchange = () => {\n                let value: number = parseInt((<HTMLInputElement>document.getElementById('tickOffset')).value, 10);\n                if (this.isMajorTicks) {\n                    this.circulargauge.axes[0].majorTicks.offset = value;\n                } else {\n                    this.circulargauge.axes[0].minorTicks.offset = value;\n                }\n                document.getElementById('offset').innerHTML = 'Tick Offset <span>&nbsp;&nbsp;&nbsp;' + value;\n                this.circulargauge.refresh();\n            };\n\n        document.getElementById('tickHeight').onpointermove = document.getElementById('tickHeight').ontouchmove =\n            document.getElementById('tickHeight').onchange = () => {\n                let value: number = parseInt((<HTMLInputElement>document.getElementById('tickHeight')).value, 10);\n                if (this.isMajorTicks) {\n                    this.circulargauge.axes[0].majorTicks.height = value;\n                } else {\n                    this.circulargauge.axes[0].minorTicks.height = value;\n                }\n                document.getElementById('height').innerHTML = 'Tick Height <span>&nbsp;&nbsp;&nbsp;' + value;\n                this.circulargauge.refresh();\n            };\n\n        document.getElementById('labelOffset').onpointermove = document.getElementById('labelOffset').ontouchmove =\n            document.getElementById('labelOffset').onchange = () => {\n                let value: number = parseInt((<HTMLInputElement>document.getElementById('labelOffset')).value, 10);\n                this.circulargauge.axes[0].labelStyle.offset = value;\n                document.getElementById('labelOffsetValue').innerHTML = 'Label Offset <span>&nbsp;&nbsp;&nbsp;' + value;\n                this.circulargauge.refresh();\n            };\n\n    }\n    ;\n}\n\n\n\n","label.html":"<div class=\"control-section\">\n    <div class=\"col-md-8\">\n        <ej-circulargauge #label='' id='container1' [margin]='margin' style='display:block;' [margin]='margin'>\n            <e-axes>\n                <e-axis [lineStyle]='lineStyle1' radius='75%' [labelStyle]='labelStyle1' [majorTicks]='majorTicks1' [minorTicks]='minorTicks1'\n                    minimum=0 maximum=180 startAngle=210 endAngle=150 [ranges]='ranges' [pointers]='pointers'>\n                    <e-annotations>\n                        <e-annotation zIndex='1' content='<div id=\"content\" style=\"color:#518C03;font-size:20px;font-family:Segoe UI;font-weight:semibold;\">145</div>' angle=0 radius='0%'>\n                        </e-annotation>\n                    </e-annotations>\n                </e-axis>\n            </e-axes>\n        </ej-circulargauge>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" class=\"property-panel-table\" title=\"Properties\" style=\"width: 100%; margin:10px\">\n                    <tr>\n                        <td>\n                            <div> Ticks </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"Ticks\" class=\"form-control\" style=\"width:90%\"> \n                            <option value=\"major\" selected = true>Major Ticks</option>\n                            <option value=\"minor\">Minor Ticks</option>\n                        </select>\n                            </div>\n                        </td>\n                    </tr>&nbsp;\n                    <tr>\n                        <td>\n                            <div> Tick Position </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"tickposition\" class=\"form-control\" style=\"width:90%\"> \n                            <option value=\"Inside\" selected = true>Inside</option>\n                            <option value=\"Outside\">Outside</option>\n                        </select>\n                            </div>\n                        </td>\n                    </tr>&nbsp;\n                    <tr>\n                        <td>\n                            <div> Label Position </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"labelposition\" class=\"form-control\" style=\"width:90%\"> \n                            <option value=\"Inside\">Inside</option>\n                            <option value=\"Outside\"  selected = true>Outside</option>\n                        </select>\n                            </div>\n                        </td>\n                    </tr>&nbsp;\n                    <tr>\n                        <td>\n                            <div id='offset'>Tick Offset <span>&nbsp;&nbsp;&nbsp;0</span> </div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"tickOffset\" value=\"0\" min=\"0\" max=\"50\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>&nbsp;\n                    <tr>\n                        <td>\n                            <div id='height'>Tick Height <span>&nbsp;&nbsp;&nbsp;10</span> </div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"tickHeight\" value=\"10\" min=\"1\" max=\"50\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>&nbsp;\n                    <tr>\n                        <td>\n                            <div id='labelOffsetValue'>Label Offset <span>&nbsp;&nbsp;&nbsp;0</span> </div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"labelOffset\" value=\"0\" min=\"0\" max=\"50\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>&nbsp;\n                    <br/>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>","index.html":"<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n\n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}