{"app.module":"import { MultipleAxisComponent } from './multiple-axis.component';\n\n\n\n\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\n/**\n * Circulargauge Control\n */\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\n\nimport { CircularGaugeAllModule } from '@syncfusion/ej2-ng-circulargauge';\nimport { GridModule } from '@syncfusion/ej2-ng-grids';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [CircularGaugeAllModule, GridModule, HttpModule, JsonpModule, BrowserModule],\ndeclarations: [MultipleAxisComponent],\nbootstrap: [MultipleAxisComponent]\n})\nexport class AppModule { }","multiple-axis.component":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { CircularGaugeComponent } from '@syncfusion/ej2-ng-circulargauge';\nimport { GaugeDirection, isCompleteAngle } from '@syncfusion/ej2-circulargauge';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n\n/**\n * multiple axis in gauge\n */\n\n@Component({\n    selector: 'control-content',\n    templateUrl: 'multiple-axis.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class MultipleAxisComponent {\n\n    @ViewChild('axes')\n    public circulargauge: CircularGaugeComponent;\n    public axisIndex: number = 0;\n    public lineStyle1: Object = {\n        width: 1.5, color: '#9E9E9E'\n    };\n    public majorTicks1: Object = {\n        position: 'Inside',\n        width: 0.5,\n        height: 10,\n        color: '#757575'\n\n    };\n    public title: string = 'Gauge with Multiple Axes';\n    public titleStyle: Object = {\n        color: 'gray',\n        size: '16px'\n    };\n    public minorTicks1: Object = {\n        position: 'Inside',\n        width: 0.5,\n        height: 5,\n        color: '#757575'\n\n    };\n    public markerHeight: number = 15;\n    public markerWidth: number = 15;\n    public labelStyle1: Object = {\n        position: 'Inside',\n        autoAngle: true,\n        hiddenLabel: 'None',\n        font: { color: '#333333' }\n    };\n    public cap: Object = { color: 'white', radius: 0, border: { width: 0 } };\n\n    public lineStyle2: Object = { width: 1.5, color: '#E84011' };\n\n    public labelStyle2: Object = {\n        position: 'Outside',\n        autoAngle: true,\n        hiddenLabel: 'None',\n        font: { color: '#E84011' }\n    };\n    public majorTicks2: Object = {\n        position: 'Outside',\n        width: 0.5,\n        height: 10,\n        color: '#E84011'\n    };\n    public minorTicks2: Object = {\n        position: 'Outside',\n        width: 0.5,\n        height: 5,\n        color: '#E84011'\n    };\n    public axis: DropDownList; public direction: DropDownList;\n\n    ngOnInit(): void {\n        this.axis = new DropDownList({\n            index: 0, width: 110,\n            change: () => {\n                this.axisIndex = +this.axis.value;\n                this.direction.value = this.circulargauge.axes[this.axisIndex].direction;\n                let startAngle: number = this.circulargauge.axes[this.axisIndex].startAngle;\n                let endAngle: number = this.circulargauge.axes[this.axisIndex].endAngle;\n                document.getElementById('start').innerHTML = 'Start Angle <span> &nbsp;&nbsp;&nbsp;' + startAngle;\n                document.getElementById('end').innerHTML = 'End Angle <span> &nbsp;&nbsp;&nbsp;' + endAngle;\n                (<HTMLInputElement>document.getElementById('startAngle')).value = startAngle.toString();\n                (<HTMLInputElement>document.getElementById('endAngle')).value = endAngle.toString();\n            }\n        });\n        this.axis.appendTo('#axisIndex');\n    \n        this.direction = new DropDownList({\n            index: 0, width: 110,\n            change: () => {\n                this.circulargauge.axes[this.axisIndex].direction = <GaugeDirection>this.direction.value.toString();\n                this.circulargauge.axes[0].pointers[0].animation.enable = false;\n                this.circulargauge.axes[1].pointers[0].animation.enable = false;\n                this.circulargauge.refresh();\n            }\n        });\n        this.direction.appendTo('#axisDirection');\n    }\n    ngAfterViewInit(): void {\n        document.getElementById('axisIndex').onchange = () => {\n            this.axisIndex = parseInt((<HTMLInputElement>document.getElementById('axisIndex')).value, 10);\n            let startAngle: number = this.circulargauge.axes[this.axisIndex].startAngle;\n            let endAngle: number = this.circulargauge.axes[this.axisIndex].endAngle;\n            document.getElementById('start').innerHTML = 'Start Angle <span> &nbsp;&nbsp;&nbsp;' + startAngle;\n            document.getElementById('end').innerHTML = 'End Angle <span> &nbsp;&nbsp;&nbsp;' + endAngle;\n            (<HTMLInputElement>document.getElementById('axisDirection')).value = this.circulargauge.axes[this.axisIndex].direction;\n            (<HTMLInputElement>document.getElementById('startAngle')).value = startAngle.toString();\n            (<HTMLInputElement>document.getElementById('endAngle')).value = endAngle.toString();\n        };\n        document.getElementById('axisDirection').onchange = () => {\n            this.circulargauge.axes[this.axisIndex].direction = <GaugeDirection>(<HTMLInputElement>document.getElementById('axisDirection')).value;\n            this.circulargauge.axes[0].pointers[0].animation.enable = false;\n            this.circulargauge.axes[1].pointers[0].animation.enable = false;\n            this.circulargauge.refresh();\n        };\n        document.getElementById('startAngle').onpointermove = document.getElementById('startAngle').ontouchmove =\n            document.getElementById('startAngle').onchange = () => {\n                let value: number = parseInt((<HTMLInputElement>document.getElementById('startAngle')).value, 10);\n                this.circulargauge.axes[0].pointers[0].animation.enable = false;\n                this.circulargauge.axes[1].pointers[0].animation.enable = false;\n                this.circulargauge.axes[this.axisIndex].startAngle = value;\n                this.circulargauge.axes[this.axisIndex].labelStyle.hiddenLabel =\n                    isCompleteAngle(this.circulargauge.axes[this.axisIndex].startAngle, this.circulargauge.axes[this.axisIndex].endAngle) ?\n                        'First' : 'None';\n                document.getElementById('start').innerHTML = 'Start Angle <span> &nbsp;&nbsp;&nbsp;' + value;\n                this.circulargauge.refresh();\n            };\n\n        document.getElementById('endAngle').onpointermove = document.getElementById('endAngle').ontouchmove =\n            document.getElementById('endAngle').onchange = () => {\n                let value: number = parseInt((<HTMLInputElement>document.getElementById('endAngle')).value, 10);\n                this.circulargauge.axes[0].pointers[0].animation.enable = false;\n                this.circulargauge.axes[1].pointers[0].animation.enable = false;\n                this.circulargauge.axes[this.axisIndex].endAngle = value;\n                this.circulargauge.axes[this.axisIndex].labelStyle.hiddenLabel =\n                    isCompleteAngle(this.circulargauge.axes[this.axisIndex].startAngle, this.circulargauge.axes[this.axisIndex].endAngle) ?\n                        'First' : 'None';\n                document.getElementById('end').innerHTML = 'End Angle <span> &nbsp;&nbsp;&nbsp;' + value;\n                this.circulargauge.refresh();\n            };\n    }\n\n    ;\n}\n\n","multiple-axis.html":"<div class=\"control-section\">\n    <div class=\"col-md-8\">\n        <ej-circulargauge #axes='' style='display:block;' id=\"axis-container\" #multipleAxes style='display:block;' [title]='title'\n            [titleStyle]='titleStyle'>\n            <e-axes>\n                <e-axis radius='95%' [lineStyle]='lineStyle1' [labelStyle]='labelStyle1' [majorTicks]='majorTicks1' [minorTicks]='minorTicks1'\n                    minimum=0 maximum=160 startAngle=220 endAngle=140>\n                    <e-pointers>\n                        <e-pointer value=80 radius='100%' pointerWidth=\"20\" color=\"#333333\" [markerHeight]='markerHeight' [markerWidth]='markerWidth'\n                            type='Marker' markerShape='Triangle'>\n                        </e-pointer>\n                    </e-pointers>\n                </e-axis>\n                <e-axis radius='95%' [lineStyle]='lineStyle2' [labelStyle]='labelStyle2' [majorTicks]='majorTicks2' [minorTicks]='minorTicks2'\n                    minimum=0 maximum=240 startAngle=220 endAngle=140>\n                    <e-pointers>\n                        <e-pointer value=120 radius='100%' pointerWidth=\"20\" color=\"#C62E0A\" [markerHeight]='markerHeight' [markerWidth]='markerWidth'\n                            type='Marker' markerShape='InvertedTriangle'>\n                        </e-pointer>\n                    </e-pointers>\n                </e-axis>\n            </e-axes>\n        </ej-circulargauge>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" title=\"Properties\" class=\"property-panel-table\" style=\"width: 100%; margin:10px\">\n                    <tr>\n                        <td>\n                            <div> Axis </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"axisIndex\" class=\"form-control\" style=\"width:90%\"> \n                            <option value=\"0\" selected = true>Axis 1</option>\n                            <option value=\"1\">Axis 2</option>\n                        </select>\n                            </div>\n                        </td>\n                    </tr>&nbsp;\n                    <tr>\n                        <td>\n                            <div> Direction </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"axisDirection\" class=\"form-control\" style=\"width:90%\"> \n                            <option value=\"ClockWise\" selected = true>ClockWise</option>\n                            <option value=\"AntiClockWise\">AntiClockWise</option>\n                        </select>\n                            </div>\n                        </td>\n                    </tr>&nbsp;\n                    <tr>\n                        <td>\n                            <div id='start'>Start Angle <span> &nbsp;&nbsp;&nbsp;220</span> </div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"startAngle\" value=\"220\" min=\"0\" max=\"360\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>&nbsp;\n                    <tr>\n                        <td>\n                            <div id='end'>End Angle <span> &nbsp;&nbsp;&nbsp;140</span> </div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"endAngle\" value=\"140\" min=\"0\" max=\"360\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>","index.html":"<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n\n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}