{"app.module":"import { RangeComponent } from './range.component';\n\n\n\n\n\n\n\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\n/**\n * Circulargauge Control\n */\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\n\nimport { CircularGaugeAllModule } from '@syncfusion/ej2-ng-circulargauge';\nimport { GridModule } from '@syncfusion/ej2-ng-grids';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [CircularGaugeAllModule, GridModule, HttpModule, JsonpModule, BrowserModule],\ndeclarations: [RangeComponent],\nbootstrap: [RangeComponent]\n})\nexport class AppModule { }","range.component":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { CircularGaugeComponent } from '@syncfusion/ej2-ng-circulargauge';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n\n/**\n * Area Series\n */\n@Component({\n    selector: 'control-content',\n    templateUrl: 'range.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class RangeComponent {\n\n    @ViewChild('range')\n    public circulargauge: CircularGaugeComponent;\n\n    public lineStyle: Object = {\n        width: 10, color: 'transparent'\n    };\n    public labelStyle: Object = {\n        position: 'Inside', useRangeColor: false,\n        font: { size: '12px', color: '#424242', fontFamily: 'Roboto', fontStyle: 'Regular' }\n    };\n    public majorTicks: Object = {\n        height: 10, offset: 10, color: 'black', width: 0.5\n    };\n    public minorTicks: Object = {\n        height: 0, width: 0.5\n    };\n    public tail: Object = {\n        length: '18%'\n    };\n    public pointerCap: Object = {\n        radius: 7, color: '#757575'\n    };\n\n    public annotaions: Object = [{\n        content: '<div><span style=\"font-size:14px; color:#9E9E9E; font-family:Regular\">Speedometer</span></div>',\n        radius: '30%', angle: 0\n    }, {\n        content: '<div><span style=\"font-size:24px; color:#424242; font-family:Regular\">65 MPH</span></div>',\n        radius: '40%', angle: 180\n    }];\n\n    public colortObj: DropDownList;\n    public listObj: DropDownList;\n\n    ngOnInit(): void {\n        this.listObj = new DropDownList({\n            index: 0, width: 100,\n            change: () => {\n                let index: number = +this.listObj.value;\n                this.colortObj.value = this.circulargauge.axes[0].ranges[index].color;\n                (<HTMLInputElement>document.getElementById('endWidth')).value = this.circulargauge.axes[0].ranges[index].endWidth.toString();\n                document.getElementById('rangeEndWidth').innerHTML = 'End Width <span> &nbsp;&nbsp;&nbsp;' +\n                    this.circulargauge.axes[0].ranges[index].endWidth;\n                (<HTMLInputElement>document.getElementById('startWidth')).value = this.circulargauge.axes[0].ranges[index].startWidth.toString();\n                document.getElementById('rangeStartWidth').innerHTML = 'Start Width <span> &nbsp;&nbsp;&nbsp;' +\n                    this.circulargauge.axes[0].ranges[index].startWidth;\n                (<HTMLInputElement>document.getElementById('end')).value = this.circulargauge.axes[0].ranges[index].end.toString();\n                document.getElementById('rangeEnd').innerHTML = 'Range End <span> &nbsp;&nbsp;&nbsp;' +\n                    this.circulargauge.axes[0].ranges[index].end;\n                (<HTMLInputElement>document.getElementById('start')).value = this.circulargauge.axes[0].ranges[index].start.toString();\n                document.getElementById('rangeStart').innerHTML = 'Range Start <span> &nbsp;&nbsp;&nbsp;' +\n                    this.circulargauge.axes[0].ranges[index].start;\n            }\n        });\n        this.listObj.appendTo('#rangeSelect');\n\n        this.colortObj = new DropDownList({\n            index: 0, width: 100,\n            change: () => {\n                this.circulargauge.axes[0].ranges[+this.listObj.value].color = this.colortObj.value.toString();\n                this.circulargauge.axes[0].pointers[0].animation.enable = false; this.circulargauge.refresh();\n            }\n        });\n        this.colortObj.appendTo('#rangeColor');\n    }\n\n    ngAfterViewInit(): void {\n        document.getElementById('start').onpointermove = document.getElementById('start').ontouchmove =\n            document.getElementById('start').onchange = () => {\n                let index: number = +this.listObj.value;\n                let min: number = parseInt((<HTMLInputElement>document.getElementById('start')).value, 10);\n                document.getElementById('rangeStart').innerHTML = 'Range Start <span> &nbsp;&nbsp;&nbsp;' + min;\n                this.circulargauge.axes[0].ranges[index].start = min;\n                this.circulargauge.axes[0].pointers[0].animation.enable = false; this.circulargauge.refresh();\n            };\n\n        document.getElementById('end').onpointermove = document.getElementById('end').ontouchmove =\n            document.getElementById('end').onchange = () => {\n                let index: number = +this.listObj.value;\n                let max: number = parseInt((<HTMLInputElement>document.getElementById('end')).value, 10);\n                document.getElementById('rangeEnd').innerHTML = 'Range End <span> &nbsp;&nbsp;&nbsp;' + max;\n                this.circulargauge.axes[0].ranges[index].end = max;\n                this.circulargauge.axes[0].pointers[0].animation.enable = false; this.circulargauge.refresh();\n            };\n\n        document.getElementById('startWidth').onpointermove = document.getElementById('startWidth').ontouchmove =\n            document.getElementById('startWidth').onchange = () => {\n                let index: number = +this.listObj.value;\n                let startWidth: number = parseInt((<HTMLInputElement>document.getElementById('startWidth')).value, 10);\n                document.getElementById('rangeStartWidth').innerHTML = 'Start Width <span> &nbsp;&nbsp;&nbsp;' + startWidth;\n                this.circulargauge.axes[0].ranges[index].startWidth = startWidth;\n                this.circulargauge.axes[0].pointers[0].animation.enable = false; this.circulargauge.refresh();\n            };\n\n        document.getElementById('endWidth').onpointermove = document.getElementById('endWidth').ontouchmove =\n            document.getElementById('endWidth').onchange = () => {\n                let index: number = +this.listObj.value;\n                let endWidth: number = parseInt((<HTMLInputElement>document.getElementById('endWidth')).value, 10);\n                document.getElementById('rangeEndWidth').innerHTML = 'End Width <span> &nbsp;&nbsp;&nbsp;' + endWidth;\n                this.circulargauge.axes[0].ranges[index].endWidth = endWidth;\n                this.circulargauge.axes[0].pointers[0].animation.enable = false; this.circulargauge.refresh();\n            };\n\n        document.getElementById('enable').onchange = () => {\n            let useRangeColor: boolean = (<HTMLInputElement>document.getElementById('enable')).checked;\n            this.circulargauge.axes[0].labelStyle.useRangeColor = useRangeColor;\n            this.circulargauge.axes[0].majorTicks.useRangeColor = useRangeColor;\n            this.circulargauge.axes[0].minorTicks.useRangeColor = useRangeColor;\n            this.circulargauge.axes[0].pointers[0].animation.enable = false; this.circulargauge.refresh();\n        };\n    }\n    ;\n}","range.html":"<div class=\"control-section\">\n    <div class=\"col-md-8\">\n        <ej-circulargauge style='display:block;' id='range-container' #range=''>\n            <e-axes>\n                <e-axis minimum=0 radius='80%' maximum=120 startAngle=210 endAngle=150 [majorTicks]='majorTicks' [labelStyle]='labelStyle'\n                    [lineStyle]='lineStyle' [minorTicks]='minorTicks' [annotations]='annotaions'>\n                    <e-ranges>\n                        <e-range start=0 end=40 color='#30B32D'></e-range>\n                        <e-range start=40 end=80 color='#FFDD00'></e-range>\n                        <e-range start=80 end=120 color='#F03E3E'></e-range>\n                    </e-ranges>\n                    <e-pointers>\n                        <e-pointer value=65 radius='60%' color='#757575' pointerWidth=8 [needleTail]='tail' [cap]=\"pointerCap\">\n                        </e-pointer>\n                    </e-pointers>\n                </e-axis>\n            </e-axes>\n        </ej-circulargauge>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" class=\"property-panel-table\" title=\"Properties\" style=\"width: 100%; margin:10px\">\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div> Select Range </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"rangeSelect\" class=\"form-control\" style=\"width:90%\"> \n                                        <option value=\"0\" selected = true>Low</option>\n                                        <option value=\"1\">Medium</option>\n                                        <option value=\"2\">High</option>\n                                    </select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div id='rangeStart'>Range Start <span> &nbsp;&nbsp;&nbsp;0</span> </div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"start\" value=\"0\" min=\"0\" max=\"120\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>\n\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div id='rangeEnd'>Range End <span> &nbsp;&nbsp;&nbsp;40</span> </div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"end\" value=\"40\" min=\"0\" max=\"120\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div id=''>Range Color</div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"rangeColor\" class=\"form-control\" style=\"width:90%\"> \n                                    <option value=\"#30B32D\" selected = true>#30B32D</option>\n                                    <option value=\"#FFDD00\">#FFDD00</option>\n                                    <option value=\"#F03E3E\">#F03E3E</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 20%\">\n                            <div id='enablePointer'>Range Font Color</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div>\n                                <input type=\"checkbox\" id=\"enable\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div id='rangeStartWidth'>Start Width <span> &nbsp;&nbsp;&nbsp;10</span> </div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"startWidth\" value=\"10\" min=\"0\" max=\"30\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div id='rangeEndWidth'>End Width <span> &nbsp;&nbsp;&nbsp;10</span> </div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" id=\"endWidth\" value=\"10\" min=\"0\" max=\"30\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>","index.html":"<!DOCTYPE html>\n<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\n        \n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}