{"app.module":"import { SampleDataComponent } from './sampledata.component';\n\n\n\n\n\n\n\n\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\n/**\n * Circulargauge Control\n */\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\n\nimport { CircularGaugeAllModule } from '@syncfusion/ej2-ng-circulargauge';\nimport { GridModule } from '@syncfusion/ej2-ng-grids';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [CircularGaugeAllModule, GridModule, HttpModule, JsonpModule, BrowserModule],\ndeclarations: [SampleDataComponent],\nbootstrap: [SampleDataComponent]\n})\nexport class AppModule { }","sampledata.component":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { CircularGaugeComponent } from '@syncfusion/ej2-ng-circulargauge';\nimport { GridComponent } from '@syncfusion/ej2-ng-grids';\n\n/**\n * pointers in gauge\n */\n@Component({\n    selector: 'control-content',\n    templateUrl: 'sampledata.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class SampleDataComponent {\n    @ViewChild('gauge1')\n    public germany: CircularGaugeComponent;\n    @ViewChild('gauge2')\n    public usa: CircularGaugeComponent;\n    @ViewChild('gauge3')\n    public uk: CircularGaugeComponent;\n    @ViewChild('grid1')\n    public grid: GridComponent;\n    public majorTicks: Object = { width: 0 };\n    public lineStyle: Object = { width: 0 };\n    public minorTicks: Object = { width: 0 };\n    public labelStyle: Object = { font: { size: '0' } };\n    public annotation1: string = \"<div id='templateWrap'><img class='imageStyle' src='http://npmci.syncfusion.com/production/angular/demos/src/circulargauge/images/positive.png' />\" +\n    \"<div class='fontDes'>${pointers[0].value}%</div></div></div>\";\n    public annotation2: string = \"<div class='fontDes1'>Germany</div>\"\n    public annotation3: string = \"<div class='fontDes1'>USA</div>\"\n    public annotation4: string = \"<div class='fontDes1'>UK</div>\"\n    public annotation5: string = \"<div id='templateWrap'><img class='imageStyle' src='http://npmci.syncfusion.com/production/angular/demos/src/circulargauge/images/negative.png' />\" +\n    \"<div class='fontDes'>${pointers[0].value}%</div></div></div>\";\n\n\n    public germanyAnnotation: Object[] = [{\n        content:  \"<div id='templateWrap'>\"\n        +\"<img style='width: 16px;height: 16px;margin-top: 4px;' src='http://npmci.syncfusion.com/production/angular/demos/src/circulargauge/images/positive.png' />\" \n        + \"<div style='float: right;color: #424242;font-size: 20px;'>${pointers[0].value}%</div></div></div>\",\n        angle: 180,\n        radius: '30%'\n    }, {\n        content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:Roboto\">Germany</div>',\n        angle: 180,\n        radius: '65%'\n    }];\n    public usaAnnotation: Object[] = [{\n        content:  \"<div id='templateWrap'>\"\n        +\"<img style='width: 16px;height: 16px;margin-top: 4px;' src='http://npmci.syncfusion.com/production/angular/demos/src/circulargauge/images/positive.png' />\" \n        + \"<div style='float: right;color: #424242;font-size: 20px;'>${pointers[0].value}%</div></div></div>\",\n        angle: 180,\n        radius: '30%'\n    }, {\n        content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:Roboto\">USA</div>',\n        angle: 180,\n        radius: '65%'\n    }];\n    public ukAnnotation: Object[] = [{\n        content:  \"<div id='templateWrap'>\"\n        +\"<img style='width: 16px;height: 16px;margin-top: 4px;' src='http://npmci.syncfusion.com/production/angular/demos/src/circulargauge/images/negative.png' />\" \n        + \"<div style='float: right;color: #424242;font-size: 20px;'>${pointers[0].value}%</div></div></div>\",\n        angle: 180,\n        radius: '30%'\n    }, {\n        content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:Roboto\">UK</div>',\n        angle: 180,\n        radius: '65%'\n    }];\n    public ranges: Object = [{\n        start: 0, end: 50,\n        startWidth: 15, endWidth: 15,\n        color: '#EC121C'\n    }, {\n        start: 50, end: 100,\n        startWidth: 15, endWidth: 15,\n        color: '#45EA0C'\n    }];\n    public pointers1: Object = [{\n        value: 75, radius: '60%',\n        animation: { enable: false },\n        color: '#777777', pointerWidth: 5,\n        cap: {\n            radius: 6,\n            border: { width: 0 },\n            color: '#777777'\n        },\n        needleTail: {\n            length: '25%'\n        }\n    }];\n    public pointers2: Object = [{\n        value: 60, radius: '60%',\n        animation: { enable: false },\n        color: '#777777', pointerWidth: 5,\n        cap: {\n            radius: 6,\n            border: { width: 0 },\n            color: '#777777'\n        },\n        needleTail: {\n            length: '25%'\n        }\n    }];\n    public pointers3: Object = [{\n        value: 25, radius: '60%',\n        animation: { enable: false },\n        color: '#777777', pointerWidth: 5,\n        cap: {\n            radius: 6,\n            border: { width: 0 },\n            color: '#777777'\n        },\n        needleTail: {\n            length: '25%'\n        }\n    }];\n\n    public data: Object[] = [];\n\n    public tooltipInterval1: number;\n\n    ngOnInit(): void {\n        this.data = [\n            {\n                'Country': 'Germany',\n                'Sales': 500,\n                'Target': 400,\n                'vsTarget': 300\n            }, {\n                'Country': 'USA',\n                'Sales': 1000,\n                'Target': 600,\n                'vsTarget': 360\n            }, {\n                'Country': 'UK',\n                'Sales': 600,\n                'Target': 700,\n                'vsTarget': 100\n            }\n        ];\n    }\n\n    ngAfterViewInit(): void {\n        this.tooltipInterval1 = setInterval(\n            (): void => {\n                if (document.getElementById('sample-data')) {\n                    let value1: number = Math.round(Math.random() * (90 - 55) + 55);\n                    let value2: number = Math.round(Math.random() * (75 - 60) + 60);\n                    let value3: number = Math.round(Math.random() * (40 - 10) + 10);\n                    let gridData1: number = 4 * value1;\n                    let gridData2: number = 6 * value2;\n                    let gridData3: number = 7 * value3;\n                    let orderData: Object[] = [\n                        {\n                            'Country': 'Germany',\n                            'Sales': 500,\n                            'Target': 400,\n                            'vsTarget': gridData1\n                        }, {\n                            'Country': 'USA',\n                            'Sales': 1000,\n                            'Target': 600,\n                            'vsTarget': gridData2\n                        }, {\n                            'Country': 'UK',\n                            'Sales': 600,\n                            'Target': 700,\n                            'vsTarget': gridData3\n                        }\n                    ];\n\n                    this.grid.dataSource = orderData;\n                    this.grid.refresh();\n\n                    this.germany.axes[0].pointers[0].animation.enable = true;\n                    this.usa.axes[0].pointers[0].animation.enable = true;\n                    this.uk.axes[0].pointers[0].animation.enable = true;\n                    this.germany.setPointerValue(0, 0, value1);\n                    this.usa.setPointerValue(0, 0, value2);\n                    this.uk.setPointerValue(0, 0, value3);\n                    this.germany.setAnnotationValue(0, 0, this.germany.axes[0].annotations[0].content);\n                    this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);\n                    this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);\n                } else {\n                    clearInterval(this.tooltipInterval1);\n                }\n            },\n            2000);\n    }\n    ;\n}","sampledata.html":"<div class=\"control-section\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <ej-circulargauge #gauge1 id=\"sample-data\" style='display: block; height:300px;'>\n                        <e-axes>\n                            <e-axis startAngle=230 endAngle=130 [majorTicks]=\"majorTicks\" [minorTicks]=\"minorTicks\" [labelStyle]=\"labelStyle\" [lineStyle]=\"lineStyle\"\n                                [ranges]=\"ranges\" [pointers]=\"pointers1\">\n                                <e-annotations>\n                                    <e-annotation [content]=\"annotation1\" angle=180 radius='30%'></e-annotation>\n                                    <e-annotation [content]=\"annotation2\" angle=180 radius='65%'></e-annotation>\n                                </e-annotations>\n                            </e-axis>\n                        </e-axes>\n                    </ej-circulargauge>\n                </div>\n                <div class=\"col-sm-4\">\n                    <ej-circulargauge #gauge2 id=\"container2\" style='display: block; height:300px;'>\n                        <e-axes>\n                            <e-axis startAngle=230 endAngle=130 [majorTicks]=\"majorTicks\" [minorTicks]=\"minorTicks\" [labelStyle]=\"labelStyle\" [lineStyle]=\"lineStyle\"\n                                [ranges]=\"ranges\" [pointers]=\"pointers2\">\n                                <e-annotations>\n                                    <e-annotation [content]=\"annotation1\" angle=180 radius='30%'></e-annotation>\n                                    <e-annotation [content]=\"annotation3\" angle=180 radius='65%'></e-annotation>\n                                </e-annotations>\n                            </e-axis>\n                        </e-axes>\n                    </ej-circulargauge>\n                </div>\n                <div class=\"col-sm-4\">\n                    <ej-circulargauge #gauge3 id=\"container3\" style='display: block; height:300px;'>\n                        <e-axes>\n                            <e-axis startAngle=230 endAngle=130 [majorTicks]=\"majorTicks\" [minorTicks]=\"minorTicks\" [labelStyle]=\"labelStyle\" [lineStyle]=\"lineStyle\"\n                                [ranges]=\"ranges\" [pointers]=\"pointers3\">\n                                <e-annotations>\n                                    <e-annotation [content]=\"annotation5\" angle=180 radius='30%'></e-annotation>\n                                    <e-annotation [content]=\"annotation4\" angle=180 radius='65%'></e-annotation>\n                                </e-annotations>\n                            </e-axis>\n                        </e-axes>\n                    </ej-circulargauge>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-12\">\n            <div class=\"row\">\n                <ej-grid #grid1 [dataSource]='data'>\n                    <e-columns>\n                        <e-column field='Country' headerText='Country' width='80'></e-column>\n                        <e-column field='Sales' headerText='Sales $' width='80'></e-column>\n                        <e-column field='Target' headerText='Target $' width='80'></e-column>\n                        <e-column field='vsTarget' headerText='vs Target' width='80'></e-column>\n                    </e-columns>\n                </ej-grid>\n            </div>\n        </div>\n    </div>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n\n    .imageStyle {\n        width: 16px;\n        height: 16px;\n        margin-top: 4px;\n    }\n\n    .fontDes {\n        float: right;\n        padding-left: 5px;\n        color: #424242;\n        font-size: 20px;\n    }\n\n    .fontDes1 {\n        color: #9E9E9E;\n        font-size: 16px;\n    }\n</style>","index.html":"<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n\n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}