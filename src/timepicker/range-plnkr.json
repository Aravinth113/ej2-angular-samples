{"app.module":"import { RangeTimePickerComponent } from './range.component';\n\n\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\nimport { NgModule, ModuleWithProviders, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n\nimport { TimePickerModule } from '@syncfusion/ej2-ng-calendars';\nimport { DropDownListModule } from '@syncfusion/ej2-ng-dropdowns';\nimport { CheckBoxModule } from '@syncfusion/ej2-ng-buttons';\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [TimePickerModule, DropDownListModule, CheckBoxModule , HttpModule, JsonpModule, BrowserModule],\ndeclarations: [RangeTimePickerComponent],\nbootstrap: [RangeTimePickerComponent]\n})\nexport class AppModule { }","range.component":"import { Component, ViewEncapsulation, Inject, ViewChild } from '@angular/core';\nimport { TimePickerComponent, ChangeEventArgs } from '@syncfusion/ej2-ng-calendars/src';\n\n/**\n\n * TimePicker Component\n */\n@Component({\n    selector: 'control-content',\n    styleUrls: ['timepicker-style.css'],\n    templateUrl: 'range.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class RangeTimePickerComponent {\n    @ViewChild('startTime')\n    public startObject: TimePickerComponent;\n    @ViewChild('endTime')\n    public endObject: TimePickerComponent;\n    public startText: string = 'Start Time';\n    public endText: string = 'End Time';\n    public isStartTimeChange: Boolean = true;\n    public endInput: HTMLInputElement;\n    ngAfterViewInit(): void {\n        this.endInput = <HTMLInputElement>document.getElementById('endPicker');\n    }\n\n    public onEnableEndTime(args: ChangeEventArgs): void {\n        let value: Date;\n        if (this.isStartTimeChange) {\n            this.endObject.enabled = true;\n            this.endObject.value = null;\n            this.endInput.value = '';\n            value = new Date(args.value);\n            value.setMinutes(value.getMinutes() + this.endObject.step);\n            this.endObject.min = value;\n        } else {\n            this.isStartTimeChange = true;\n        }\n    }\n\n    public changeTime(): void {\n        let element: HTMLInputElement = <HTMLInputElement>document.getElementById('dayRange');\n        this.isStartTimeChange = false;\n        if (element.checked) {\n            this.startObject.value = new Date('9/6/2017 9:00');\n            this.endObject.enabled = true;\n            this.endObject.value = new Date('9/6/2017 18:00');\n            this.startObject.readonly = true;\n            this.endObject.readonly = true;\n        } else {\n            this.endObject.value = null;\n            this.startObject.value = null;\n            this.endInput.value = '';\n            this.startObject.readonly = false;\n            this.endObject.readonly = false;\n            this.endObject.enabled = false;\n        }\n    }\n\n    \n}","range.html":"<div class=\"control-section range\">\n    <div id=\"component_wrapper\">\n        <div class=\"pane\">\n            <div class=\"tabs-wrap\">\n                <div class=\"wrap\">\n                    <ej-timepicker #startTime id='startPicker' [placeholder]='startText' (change)='onEnableEndTime($event)'></ej-timepicker>\n                </div>\n            </div>\n            <div class=\"tabs-wrap\" style=\"clear: both\">\n                <div class=\"wrap\">\n                    <ej-timepicker #endTime id='endPicker' [placeholder]='endText' [enabled]='false'></ej-timepicker>\n                </div>\n            </div>\n            <div class=\"tabs-wrap\" style=\"clear: both\">\n                <div class=\"wrap\">\n                    <ej-checkbox id=\"dayRange\" label=\"Business Hours\" (change)=\"changeTime()\"></ej-checkbox>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<style>\n    .control-section {\n        margin: 30px;\n    }\n\n    #component_wrapper {\n        display: block;\n        margin: 0 auto;\n        float: none;\n        padding: 2% 0;\n        max-width: 300px;\n        border: none;\n    }\n\n    .control-section.range {\n        min-height: 230px;\n        border: 1px solid rgba(0, 0, 0, 0.12);\n        margin: 30px;\n        padding: 3%;\n    }\n\n    .e-bigger .control-section {\n        margin-top: 60px;\n    }\n\n    .e-bigger .control-section.range {\n        border: none;\n    }\n\n    .range .tabs-wrap {\n        padding: 12px 0px;\n    }\n</style>","timepicker-style.css":"\n.control-section {\n    margin: 30px;\n}\n\n#control_wrapper #container {\n    min-height: 300px;\n}\n\n.e-bigger #control_wrapper #container {\n    min-height: 380px;\n}\n\n#description{\n    clear: both;\n}\n\n.form-group .content-wrapper {\n    float: left;\n    padding: 0 10px;\n}\n\n.property-panel-content {\n    padding: 0 10px 10px 0;\n}\n","index.html":"<!DOCTYPE html>\n<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n\n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}