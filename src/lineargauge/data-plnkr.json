{"app.module":"import { DataComponent } from './data.component';\n\n\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\n/**\n * Lineargauge Control\n */\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\n\nimport { LinearGaugeAllModule } from '@syncfusion/ej2-ng-lineargauge';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [LinearGaugeAllModule, HttpModule, JsonpModule, BrowserModule],\ndeclarations: [DataComponent],\nbootstrap: [DataComponent]\n})\nexport class AppModule { }","data.component":"import { Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * Sample for data sample\n */\n@Component({\n    selector: 'control-content',\n    templateUrl: 'data.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class DataComponent {\n\n    public Container1: Object = {\n        width: 30,\n        backgroundColor: '#e0e0e0',\n        border: {\n            width: 0\n        },\n        offset: 30\n    };\n\n    //Initializing Annotation\n    public Annotation1: Object[] = [\n        {\n            content: '<div id=\"title\" style=\"width:300px;\"> <img style=\"float:left\" src'\n            + '=\"src/lineargauge/images/Exercise Tracking.svg\"/><p style=\"font-size:18px;color:#4285F4;float:left;margin-left:12px;'\n            + 'margin-top:4px\">Exercise Tracking </p></div>',\n            axisIndex: 0,\n            axisValue: 0,\n            x: 150,\n            y: -180\n        },\n        {\n            content: '<div id=\"running\" style=\"width:100px;\"><img style=\"height:25px;width:25px;float:left\" src=\"http://npmci.syncfusion.com/production/angular/demos/src/lineargauge' +\n            '/images/Running.svg\" /></span><p style=\"float:left;margin-left:10px;\">Running</p></div>',\n            axisIndex: 0,\n            axisValue: 0,\n            x: 50,\n            y: -130\n        },\n        {\n            content: '<div id=\"pointerText\" style=\"width:60px;\"><p style=\"font-size:15px;color:#30b32d;\">10 MPH</p></div>',\n            axisIndex: 0,\n            axisValue: 10,\n            y: -65\n        }\n    ];\n\n    public Axes1: Object[] = [{\n        line: {\n            offset: 30\n        },\n        labelStyle: {\n            font: {\n                color: '#424242',\n            },\n            offset: 50\n        },\n        pointers: [{\n            value: 10,\n            placement: 'Near',\n            offset: -60,\n            height: 10,\n            width: 10,\n            color: '#424242',\n            markerType: 'Triangle'\n        }],\n        ranges: [\n            {\n                start: 0,\n                end: 10,\n                startWidth: 30,\n                endWidth: 30,\n                color: '#30b32d'\n            }\n        ]\n    }];\n\n    public Container2: Object = {\n        width: 30,\n        backgroundColor: '#e0e0e0',\n        border: {\n            width: 0\n        },\n        offset: -50\n    };\n\n    public Annotation2: Object[] = [{\n        content: '<div id=\"cycle\" style=\"width:100px;\"><img style=\"height:25px;width:25px;float:left\" src=\"http://npmci.syncfusion.com/production/angular/demos/src/lineargauge'\n        + '/images/Cycling.svg\" /></span><p style=\"float:left;margin-left:10px;\">Cycling</p></div>',\n        axisIndex: 0,\n        axisValue: 0,\n        x: 50,\n        y: -110\n    },\n    {\n        content: '<div id=\"pointerText\" style=\"width:60px;\"><p style=\"font-size:15px;color:#30b32d;\">28 MPH</p></div>',\n        axisIndex: 0,\n        axisValue: 28,\n        y: -70\n    }];\n\n    public Axes2: Object[] = [{\n        line: {\n            offset: 30\n        },\n        labelStyle: {\n            font: {\n                color: '#424242',\n            },\n            offset: 50\n        },\n        pointers: [{\n            value: 28,\n            height: 10,\n            width: 10,\n            placement: 'Near',\n            offset: -60,\n            color: '#424242',\n            markerType: 'Triangle'\n        }],\n        ranges: [\n            {\n                start: 0,\n                end: 28,\n                startWidth: 30,\n                endWidth: 30,\n                color: '#30b32d'\n            }\n        ]\n    }];\n\n    public Container3: Object = {\n        width: 30,\n        backgroundColor: '#e0e0e0',\n        border: {\n            width: 0\n        },\n        offset: -90\n    };\n\n    public Annotation3: Object[] = [{\n        content: '<div id=\"walk\" style=\"width:100px;\"><img style=\"height:25px;width:25px;float:left\" src=\"http://npmci.syncfusion.com/production/angular/demos/src/' +\n        'lineargauge/images/Walking.svg\" /></span><p style=\"float:left;margin-left:10px;\">Walking</p></div>',\n        axisIndex: 0,\n        axisValue: 0,\n        x: 50,\n        y: -120\n    },\n    {\n        content: '<div id=\"pointerText\" style=\"width:100px;\"><p style=\"font-size:15px;color:#30b32d;\">2000 Steps</p></div>',\n        axisIndex: 0,\n        axisValue: 2.2,\n        y: -65\n    }];\n\n    public Axes3: Object[] = [{\n        maximum: 10,\n        line: {\n            offset: 30\n        },\n        labelStyle: {\n            font: {\n                color: '#424242',\n            },\n            format: '{value}k',\n            offset: 50\n        },\n        pointers: [{\n            value: 2,\n            height: 10,\n            width: 10,\n            placement: 'Near',\n            offset: -60,\n            color: '#424242',\n            markerType: 'Triangle'\n        }],\n        ranges: [\n            {\n                start: 0,\n                end: 2,\n                startWidth: 30,\n                endWidth: 30,\n                color: '#30b32d'\n            }\n        ]\n    }];\n    ;\n}","data.html":"<div class=\"control-section\">\n    <div class=\"row\">\n        <ej-lineargauge id='thermometerContainer1' style='display:block;height:300px;' orientation='Horizontal' [container]='Container1'\n            [axes]='Axes1' [annotations]='Annotation1'>\n        </ej-lineargauge>\n    </div>\n    <div class=\"row\">\n        <ej-lineargauge id='thermometerContainer2' style='display:block;height:300px;' orientation='Horizontal' [container]='Container2'\n            [axes]='Axes2' [annotations]='Annotation2'>\n        </ej-lineargauge>\n    </div>\n    <div class=\"row\">\n        <ej-lineargauge id='thermometerContainer3' style='display:block;height:300px;' orientation='Horizontal' [container]='Container3'\n            [axes]='Axes3' [annotations]='Annotation3'>\n        </ej-lineargauge>\n    </div>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>","index.html":"<!DOCTYPE html>\n<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\n        \n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}