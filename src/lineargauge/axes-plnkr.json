{"app.module":"import { AxesComponent } from './axes.component';\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\n/**\n * Lineargauge Control\n */\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\n\nimport { LinearGaugeAllModule } from '@syncfusion/ej2-ng-lineargauge';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [LinearGaugeAllModule, HttpModule, JsonpModule, BrowserModule],\ndeclarations: [AxesComponent],\nbootstrap: [AxesComponent]\n})\nexport class AppModule { }","axes.component":"import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { LinearGaugeComponent } from '@syncfusion/ej2-ng-lineargauge';\nimport { Point, Placement, MarkerType, Pointer } from '@syncfusion/ej2-lineargauge';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n\n/**\n * Sample for thermometer model\n */\n@Component({\n    selector: 'control-content',\n    templateUrl: 'axes.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AxesComponent {\n    @ViewChild('gauge')\n    public gauge: LinearGaugeComponent;\n    @ViewChild('pointerType')\n    public pointerType: DropDownList;\n    @ViewChild('pointerPlace')\n    public markerPlacement: DropDownList;\n    //Initializing Annotation\n    public Annotation: Object[] = [{\n        content: '<div id=\"pointer\" style=\"width:70px\"><h1 style=\"font-size:14px;' +\n        'color:#424242\">${axes[0].pointers[0].currentValue} MPH</h1></div>',\n        axisIndex: 0,\n        axisValue: 10,\n        x: 10,\n        y: 60, zIndex: '1'\n    }];\n\n    //Initializing Axes\n    public Axes: Object[] = [{\n        line: {\n            color: '#9E9E9E'\n        },\n        pointers: [{\n            value: 10,\n            height: 15,\n            width: 15,\n            color: '#757575',\n            offset: 30\n        }],\n        majorTicks: {\n            color: '#9E9E9E',\n            interval: 10\n        },\n        minorTicks: {\n            color: '#9E9E9E',\n            interval: 2\n        },\n        labelStyle: {\n            font: {\n                color: '#424242'\n            },\n            offset: 48\n        }\n    }];\n    ngOnInit(): void {\n        this.pointerType = new DropDownList({\n            index: 0, width: 100,\n            change: () => {\n                this.gauge.axes[0].pointers[0].type = <Point>this.pointerType.value;\n                this.markerPlacement.enabled = (<Point>this.pointerType.value === 'Marker') ? true : false;\n                this.markerPlacement.readonly = (<Point>this.pointerType.value === 'Marker') ? false : true;\n                this.gauge.refresh();\n            }\n        });\n        this.pointerType.appendTo('#pointerType');\n\n        this.markerPlacement = new DropDownList({\n            index: 0, width: 100,\n            change: () => {\n                this.gauge.axes[0].pointers[0].placement = <Placement>this.markerPlacement.value;\n                this.gauge.refresh();\n            }\n        });\n        this.markerPlacement.appendTo('#pointerPlace');\n    }\n    ;\n    ngAfterViewInit(): void {\n        document.getElementById('opposed').onchange = (sender: Event) => {\n            let ele: HTMLInputElement = <HTMLInputElement>document.getElementById('opposed');\n            this.gauge.axes[0].opposedPosition = ele.checked;\n            if (ele.checked) {\n                this.gauge.axes[0].pointers[0].placement = 'Near';\n                this.gauge.axes[0].pointers[0].markerType = 'Triangle';\n                this.gauge.axes[0].pointers[0].offset = -20;\n                this.gauge.axes[0].labelStyle.offset = 0;\n                this.gauge.annotations[0].x = 10;\n                this.gauge.annotations[0].y = -60;\n            } else {\n                this.gauge.axes[0].pointers[0].placement = 'Far';\n                this.gauge.axes[0].pointers[0].offset = 0;\n                this.gauge.axes[0].pointers[0].offset = 30;\n                this.gauge.axes[0].pointers[0].markerType = 'InvertedTriangle';\n                this.gauge.axes[0].labelStyle.offset = 38;\n                this.gauge.annotations[0].x = 10;\n                this.gauge.annotations[0].y = 60;\n            }\n            this.gauge.refresh();\n        };\n\n        document.getElementById('axisInversed').onchange = (sender: Event) => {\n            let ele: HTMLInputElement = <HTMLInputElement>document.getElementById('axisInversed');\n            this.gauge.axes[0].isInversed = ele.checked;\n            this.gauge.refresh();\n        };\n\n        document.getElementById('min').ontouchmove = document.getElementById('min').onpointermove =\n            document.getElementById('min').onchange = () => {\n                let min: HTMLInputElement = <HTMLInputElement>document.getElementById('min');\n                let max: HTMLInputElement = <HTMLInputElement>document.getElementById('max');\n                this.gauge.axes[0].minimum = parseInt(min.value, 10);\n                this.gauge.axes[0].maximum = parseInt(max.value, 10);\n                document.getElementById('minValue').innerHTML = 'Axis Minimum <span>&nbsp;&nbsp;&nbsp;' + min.value;\n                this.gauge.refresh();\n                this.gauge.annotations[0].axisValue = (<Pointer>this.gauge.axes[0].pointers[0]).currentValue;\n                this.gauge.refresh();\n            };\n\n        document.getElementById('max').ontouchmove = document.getElementById('max').onpointermove =\n            document.getElementById('max').onchange = () => {\n                let min: HTMLInputElement = <HTMLInputElement>document.getElementById('min');\n                let max: HTMLInputElement = <HTMLInputElement>document.getElementById('max');\n                this.gauge.axes[0].maximum = parseInt(max.value, 10);\n                this.gauge.axes[0].minimum = parseInt(min.value, 10);\n                document.getElementById('maxValue').innerHTML = 'Axis Maximum <span>&nbsp;&nbsp;&nbsp;' + max.value;\n                this.gauge.refresh();\n                this.gauge.annotations[0].axisValue = (<Pointer>this.gauge.axes[0].pointers[0]).currentValue;\n                this.gauge.refresh();\n            };\n\n        document.getElementById('format').onchange = () => {\n            let ele: HTMLInputElement = <HTMLInputElement>document.getElementById('format');\n            this.gauge.axes[0].labelStyle.format = ele.value.indexOf('{value}') > -1 ? ele.value : this.gauge.axes[0].labelStyle.format;\n            this.gauge.refresh();\n        };\n    };\n\n    private getRandomArbitrary(min: number, max: number): number {\n        return Math.random() * (max - min) + min;\n    }\n}","axes.html":"<div class=\"control-section\">\n    <div class=\"col-md-8\">\n        <ej-lineargauge id='axisContainer' #gauge style='display:block;' orientation='Horizontal' [axes]='Axes' [annotations]='Annotation'>\n        </ej-lineargauge>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" class=\"property-panel-table\" title=\"Properties\" style=\"width: 100%\">\n                    <tr>\n                        <td>\n                            <div id='minValue'>Axis Minimum <span>&nbsp;&nbsp;&nbsp;0</span> </div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" step='5' id=\"min\" value=\"0\" min=\"0\" max=\"100\" style=\"width:90%;\" />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div id='maxValue'>Axis Maximum <span>&nbsp;&nbsp;&nbsp;100</span> </div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"range\" step='5' id=\"max\" value=\"100\" min=\"0\" max=\"100\" style=\"width:90%;\" />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>Axis Inversed</div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"checkbox\" id='axisInversed' />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>Axis Opposed</div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"checkbox\" id='opposed' />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>Label Format</div>\n                        </td>\n                        <td>\n                            <div>\n                                <input type=\"text\" value=\"{value}\" id='format' class=\"form-control\" style=\"width:90%\" />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>Pointer type</div>\n                        </td>\n                        <td>\n                            <div>\n                                <select name=\"pointerType\" autocomplete=\"off\" id=\"pointerType\" class=\"form-control\" style=\"width:90%\">\n                        <option value=\"Marker\" selected>Marker</option>\n                        <option value=\"Bar\">Bar</option>\n                     </select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>Marker Placement</div>\n                        </td>\n                        <td>\n                            <div>\n                                <select name=\"pointerPlace\" autocomplete=\"off\" id=\"pointerPlace\" class=\"form-control\" style=\"width:90%\">\n                        <option value=\"Near\">Near</option>\n                        <option value=\"Center\">Center</option>\n                         <option value=\"Far\" selected>Far</option>\n                     </select>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n\n    .property-panel-section {\n        height: 380px;\n    }\n</style>","index.html":"<!DOCTYPE html>\n<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\n        \n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}