{"common/shared.module":"import { NgModule } from '@angular/core';\nimport { ButtonModule } from '@syncfusion/ej2-ng-buttons';\nimport { ListViewModule } from '@syncfusion/ej2-ng-lists';\nimport { DropDownListModule } from '@syncfusion/ej2-ng-dropdowns';\nimport { TreeViewModule, TabModule } from '@syncfusion/ej2-ng-navigations';\n\n\n\n@NgModule({\n    imports: [\n        ButtonModule,\n        ListViewModule,\n        DropDownListModule,\n        TreeViewModule,\n        TabModule\n\n    ],\n    \n    exports: [\n        ButtonModule,\n        TreeViewModule,\n        ListViewModule,\n        DropDownListModule,\n        TabModule\n    ]\n})\nexport class SharedModule { }","app.module":"import { AnnotationChartComponent } from './annotation.component';\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\n/**\n * Chart Control\n */\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\n\nimport { ButtonModule } from '@syncfusion/ej2-ng-buttons';\nimport { NumericTextBoxModule } from '@syncfusion/ej2-ng-inputs';\nimport { ChartAllModule, AccumulationChartAllModule } from '@syncfusion/ej2-ng-charts';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { SharedModule } from './common/shared.module';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [ChartAllModule, SharedModule, ButtonModule, AccumulationChartAllModule, NumericTextBoxModule, HttpModule, JsonpModule, BrowserModule],\ndeclarations: [AnnotationChartComponent],\nbootstrap: [AnnotationChartComponent]\n})\nexport class AppModule { }","annotation.component":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport {\n    ILoadedEventArgs, IMouseEventArgs, ChartComponent, IAccLoadedEventArgs, AccumulationTheme,\n    SelectionMode, ChartTheme, Series, IAccResizeEventArgs\n} from '@syncfusion/ej2-ng-charts';\nimport {\n    AccumulationChart, AccumulationDataLabel\n} from '@syncfusion/ej2-charts';\nAccumulationChart.Inject(AccumulationDataLabel);\nimport { Browser } from '@syncfusion/ej2-base';\n\n/**\n * Sample for Annotation in chart\n */\n@Component({\n    selector: 'control-content',\n    templateUrl: 'annotation.html',\n    styleUrls: ['chart.style.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AnnotationChartComponent {\n    public pie: AccumulationChart;\n    public render: boolean = false;\n    @ViewChild('chart')\n    public chart: ChartComponent;\n    public legend: Object = {\n        visible: true,\n        toggleVisibility: false\n    };\n    //Initializing dataSource\n    public dataSource: Object = [\n        { x: '2014', y0: 51, y1: 77, y2: 66, y3: 34 }, { x: '2015', y0: 67, y1: 49, y2: 19, y3: 38 },\n        { x: '2016', y0: 143, y1: 121, y2: 91, y3: 44 }, { x: '2017', y0: 19, y1: 28, y2: 65, y3: 51 },\n        { x: '2018', y0: 30, y1: 66, y2: 32, y3: 61 }, { x: '2019', y0: 189, y1: 128, y2: 122, y3: 76 },\n        { x: '2020', y0: 72, y1: 97, y2: 65, y3: 82 }\n    ];\n    public pieDataSource: Object[] = [\n        { x: 'UK', y: 51, text: '22%' }, { x: 'Germany', y: 77, text: '34%' },\n        { x: 'France', y: 66, text: '29%' }, { x: 'Italy', y: 34, text: '15%' }\n    ];\n    //Initializing Primary X Axis\n    public primaryXAxis: Object = {\n        title: 'Years',\n        majorGridLines: { width: 0 }, minorGridLines: { width: 1 },\n        minorTickLines: { width: 1 }, interval: 1,\n        labelIntersectAction: 'Rotate45',\n        valueType: 'Category'\n    };\n    public chartArea: Object = {\n        border: {\n            width: 0\n        }\n    };\n    public width: string = Browser.isDevice ? '100%' : '80%';\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n    };\n    //Initializing Primary Y Axis\n    public primaryYAxis: Object = {\n        title: 'Sales in Billions', lineStyle: { width: 0 },\n        minimum: 0, maximum: 700, interval: 100,\n        majorGridLines: { width: 1 }, minorGridLines: { width: 1 },\n        majorTickLines: { width: 0 }, minorTickLines: { width: 0 }, labelFormat: '{value}B',\n    };\n    public getValue(series: Series[], pointIndex: number, y: number): string {\n        let totalValue: number = 0;\n        for (let ser of series) {\n            totalValue += ser.points[pointIndex].y as number;\n        }\n        return (Math.round((y / totalValue) * 100)) + '%';\n    };\n    public title: string = 'Mobile Game Market by Country';\n    public selectedDataIndexes: any[] = [{ series: 0, point: 0 }];\n    public selectionMode: SelectionMode = 'Cluster';\n\n    public chartMouseUp(args: IMouseEventArgs): void {\n        if (args.target.indexOf('Point') > -1) {\n            let pointIndex: number = parseInt(args.target[args.target.length - 1], 10);\n            this.pieDataSource = [];\n            for (let series of this.chart.visibleSeries) {\n                let value: number = series.points[pointIndex].y as number;\n                this.pieDataSource.push({\n                    'x': series.name,\n                    'y': value,\n                    'text': this.getValue(this.chart.visibleSeries, pointIndex, value)\n                });\n            }\n            this.pie.series[0].dataSource = this.pieDataSource;\n            this.pie.series[0].xName = 'x';\n            this.pie.series[0].yName = 'y';\n            this.pie.refresh();\n        }\n    }\n\n    public loaded(args: ILoadedEventArgs): void {\n        if (this.render) {\n            this.pie.destroy();\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            let theme: ChartTheme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n            this.pie = new AccumulationChart({\n                background: 'transparent',\n                series: [{\n                    radius: '65%', animation: { enable: false },\n                    dataSource: this.pieDataSource,\n                    xName: 'x', yName: 'y', dataLabel: { visible: true, position: 'Inside', font: { color: 'white' }, name: 'text' },\n                }],\n                theme: theme,\n                legendSettings: { visible: false }\n            });\n            this.pie.appendTo('#chart_annotation');\n        }\n\n\n    }\n    public animationComplete(args: ILoadedEventArgs): void {\n        this.render = true;\n        this.pie = new AccumulationChart({\n            background: 'transparent',\n            series: [{\n                radius: '65%', animation: { enable: false },\n                dataSource: this.pieDataSource,\n                xName: 'x', yName: 'y', dataLabel: { visible: true, position: 'Inside', name: 'text' },\n            }],\n            load: (args: IAccLoadedEventArgs) => {\n                let selectedTheme: string = location.hash.split('/')[1];\n                selectedTheme = selectedTheme ? selectedTheme : 'Material';\n                args.accumulation.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n            },\n            legendSettings: { visible: false },\n            resized: Â (args: IAccResizeEventArgs) => {\n                location.reload();\n            }\n        });\n        this.pie.appendTo('#chart_annotation');\n    }\n    ;\n}","annotation.html":"<div class=\"control-section\">\n    <div align='center'>\n        <ej-chart #chart style='display:block;' [title]='title' [primaryXAxis]='primaryXAxis' [primaryYAxis]='primaryYAxis' (load)='load($event)'\n            (animationComplete)='animationComplete($event)' [chartArea]='chartArea' [width]='width' align='center' [selectionMode]='selectionMode'\n            [chartArea]='chartArea' [legendSettings]='legend' [selectedDataIndexes]='selectedDataIndexes' (chartMouseUp)='chartMouseUp($event)'\n            (loaded)='loaded($event)'>\n            <e-annotations>\n                <e-annotation content='<div id=\"chart_annotation\" style=\"width: 200px; height: 200px\"></div>' x='20%' y='25%' coordinateUnits='Pixel'\n                    region='Series'>\n                </e-annotation>\n            </e-annotations>\n            <e-series-collection>\n                <e-series [dataSource]='dataSource' type='StackingColumn' xName='x' yName='y0' name='UK'>\n                </e-series>\n                <e-series [dataSource]='dataSource' type='StackingColumn' xName='x' yName='y1' name='Germany'>\n                </e-series>\n                <e-series [dataSource]='dataSource' type='StackingColumn' xName='x' yName='y2' name='France'>\n                </e-series>\n                <e-series [dataSource]='dataSource' type='StackingColumn' xName='x' yName='y3' name='Italy'>\n                </e-series>\n            </e-series-collection>\n        </ej-chart>\n    </div>\n</div>","chart.style.css":".control-fluid {\n    padding: 0px !important;\n}","index.html":"<!DOCTYPE html>\n<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\n        \n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}