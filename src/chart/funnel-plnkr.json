{"common/shared.module":"import { NgModule } from '@angular/core';\nimport { ButtonModule } from '@syncfusion/ej2-ng-buttons';\nimport { ListViewModule } from '@syncfusion/ej2-ng-lists';\nimport { DropDownListModule } from '@syncfusion/ej2-ng-dropdowns';\nimport { TreeViewModule, TabModule } from '@syncfusion/ej2-ng-navigations';\n\n\n\n@NgModule({\n    imports: [\n        ButtonModule,\n        ListViewModule,\n        DropDownListModule,\n        TreeViewModule,\n        TabModule\n\n    ],\n    \n    exports: [\n        ButtonModule,\n        TreeViewModule,\n        ListViewModule,\n        DropDownListModule,\n        TabModule,\n        SBDescriptionComponent\n    ]\n})\nexport class SharedModule { }","app.module":"import { FunnelComponent } from './funnel.component';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\n/**\n * Chart Control\n */\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\n\nimport { ButtonModule } from '@syncfusion/ej2-ng-buttons';\nimport { NumericTextBoxModule } from '@syncfusion/ej2-ng-inputs';\nimport { ChartAllModule, AccumulationChartAllModule } from '@syncfusion/ej2-ng-charts';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { SharedModule } from './common/shared.module';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [ChartAllModule, SharedModule, ButtonModule, AccumulationChartAllModule, NumericTextBoxModule, HttpModule, JsonpModule, BrowserModule],\ndeclarations: [FunnelComponent],\nbootstrap: [FunnelComponent]\n})\nexport class AppModule { }","funnel.component":"import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n    AccumulationChartComponent, AccumulationChart, IAccLoadedEventArgs,\n    IAccResizeEventArgs, AccumulationTheme\n} from '@syncfusion/ej2-ng-charts';\n\n/**\n * Default Pie\n */\n@Component({\n    selector: 'control-content',\n    templateUrl: 'funnel.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class FunnelComponent {\n    public data: Object[] = [{ x: 'Renewed', y: 18.20, text: '18.20%' },\n    { x: 'Subscribe', y: 27.3, text: '27.3%' },\n    { x: 'Support', y: 55.9, text: '55.9%' },\n    { x: 'Downloaded', y: 76.8, text: '76.8%' },\n    { x: 'Visited', y: 100, text: '100%' }];\n    @ViewChild('funnel')\n    public funnel: AccumulationChartComponent | AccumulationChart;\n    public funnelNeckWidth(e: Event): void {\n        let value: string = (document.getElementById('funnelNeckWidth') as HTMLSelectElement).value;\n        this.funnel.series[0].neckWidth = value + '%';\n        document.getElementById('neckWidth').innerHTML = value + '%';\n        this.funnel.removeSvg();\n        this.funnel.refreshSeries();\n        this.funnel.refreshChart();\n    };\n    public funnelNeckHeight(e: Event): void {\n        let value: string = (document.getElementById('funnelNeckHeight') as HTMLSelectElement).value;\n        this.funnel.series[0].neckHeight = value + '%';\n        document.getElementById('neckHeight').innerHTML = value + '%';\n        this.funnel.removeSvg();\n        this.funnel.refreshSeries();\n        this.funnel.refreshChart();\n    };\n    //Initializing DataLabel\n    public dataLabel: Object = {\n        name: 'text', visible: true, position: 'Inside', font: {\n            fontWeight: '600'\n        }\n    };\n    public load(args: IAccLoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.accumulation.theme = <AccumulationTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n    };\n\n    public onChartResized(args: IAccResizeEventArgs): void {\n        let bounds: ClientRect = document.getElementById('container').getBoundingClientRect();\n        if (bounds.width < bounds.height) {\n            args.accumulation.series[0].width = '80%';\n            args.accumulation.series[0].height = '70%';\n        } else {\n            args.accumulation.series[0].width = '60%';\n            args.accumulation.series[0].height = '80%';\n        }\n    };\n    public neckWidth: string = '15%';\n    public neckHeight: string = '18%';\n    public gapRatio: number = 0.03;\n    public emptyPointSettings: Object = {\n        fill: 'red', mode: 'Drop'\n    };\n    public explode: boolean = true;\n    public tooltip: Object = { enable: true, format: '${point.x} : ${point.y} %' };\n    public title: string = 'Website Visitors';\n    ;\n\n}","funnel.html":"<div class=\"control-section\">\n    <div class=\"col-md-9\">\n        <ej-accumulationchart id=\"container\" #funnel style='display:block;  width: 92%'  [tooltip]=\"tooltip\" [title]=\"title\" \n        (load)='load($event)' (resized)='onChartResized($event)'>\n            <e-accumulation-series-collection>\n                <e-accumulation-series [dataSource]='data' xName='x' yName='y' [neckWidth]=\"neckWidth\" [neckHeight]=\"neckHeight\" [gapRatio]=\"gapRatio\"\n                [emptyPointSettings]=\"emptyPointSettings\" width = \"60%\" height = \"80%\" [explode]=\"explode\" [dataLabel]=\"dataLabel\" type='Funnel'> </e-accumulation-series>\n            </e-accumulation-series-collection>\n        </ej-accumulationchart>\n    </div>\n    <div class=\"col-md-3 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" class=\"property-panel-table\" title=\"Properties\" style=\"width: 100%\">\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 30%\">\n                            <div>Neck Width:\n                                <p id=\"neckWidth\" style=\"font-weight: normal;\">15%</p>\n                            </div>\n                        </td>\n                        <td style=\"width: 70%;\">\n                            <div data-role=\"rangeslider\">\n                                <input type=\"range\" name=\"range-min\" value=\"15\" min=\"0\" max=\"45\" (touchmove)='funnelNeckWidth($event)' (pointermove)='funnelNeckWidth($event)' (change)='funnelNeckWidth($event)' autocomplete=\"off\" id=\"funnelNeckWidth\" style=\"width:90%\">\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 30%\">\n                            <div>Neck Height:\n                                <p id=\"neckHeight\" style=\"font-weight: normal;\">18%</p>\n                            </div>\n                        </td>\n                        <td style=\"width: 70%;\">\n                            <div data-role=\"rangeslider\">\n                                <input type=\"range\" name=\"range-min\" id=\"funnelNeckHeight\" value=\"18\" min=\"0\" max=\"50\" (touchmove)='funnelNeckHeight($event)' (pointermove)='funnelNeckHeight($event)' (change)='funnelNeckHeight($event)' autocomplete=\"off\" style=\"width:90%\">\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<div id=\"action-description\">\n    <p>\n        This sample demonstrates funnel chart for website visitors for various purposes. You can change neck height and neck width of a funnel chart using <code>Neck Width</code> and <code>Neck Height</code> in the property panel.\n    </p>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>","index.html":"<!DOCTYPE html>\n<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\n        \n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}