{"common/shared.module":"import { NgModule } from '@angular/core';\nimport { ButtonModule } from '@syncfusion/ej2-ng-buttons';\nimport { ListViewModule } from '@syncfusion/ej2-ng-lists';\nimport { DropDownListModule } from '@syncfusion/ej2-ng-dropdowns';\n\n\n@NgModule({\n    imports: [\n        ButtonModule,\n        ListViewModule,\n        DropDownListModule\n    ],\n     \n    exports: [\n        ButtonModule,\n        ListViewModule,\n        DropDownListModule\n    ]\n})\nexport class SharedModule { }\n","app.module":"import { StripLineChartComponent } from './stripline.component';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\n/**\n * Chart Control\n */\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\n\nimport { ButtonModule } from '@syncfusion/ej2-ng-buttons';\nimport { NumericTextBoxModule } from '@syncfusion/ej2-ng-inputs';\nimport { ChartAllModule, AccumulationChartAllModule } from '@syncfusion/ej2-ng-charts';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { SharedModule } from './common/shared.module';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [ChartAllModule, SharedModule, ButtonModule, AccumulationChartAllModule, NumericTextBoxModule, HttpModule, JsonpModule, BrowserModule],\ndeclarations: [StripLineChartComponent],\nbootstrap: [StripLineChartComponent]\n})\nexport class AppModule { }","stripline.component":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ILoadedEventArgs, ChartComponent, ChartTheme } from '@syncfusion/ej2-ng-charts';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n\n/**\n * Step line Series\n */\n@Component({\n    selector: 'control-content',\n    templateUrl: 'stripline.html',\n    styleUrls: ['chart.style.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StripLineChartComponent {\n\n    public data: Object[] = [\n        { x: 'Sun', y: 28 }, { x: 'Mon', y: 27 }, { x: 'Tue', y: 33 }, { x: 'Wed', y: 36 },\n        { x: 'Thu', y: 28 }, { x: 'Fri', y: 30 }, { x: 'Sat', y: 31 }\n    ];\n    //Initializing Primary Y Axis\n    public primaryXAxis: Object = {\n        valueType: 'Category', majorGridLines: { width: 0 },\n        //Initializing Striplines\n        stripLines: [\n            {\n                start: -1, end: 1.5, text: 'Winter', color: 'url(#winter)',\n                textStyle: { size: '18px', color: '#ffffff', fontWeight: '600' },\n                border: { width: 0 }, rotation: -90, visible: true\n            }, {\n                start: 1.5, end: 3.5, text: 'Summer', color: 'url(#summer)',\n                textStyle: { size: '18px', color: '#ffffff', fontWeight: '600' },\n                border: { width: 0 }, rotation: -90, visible: true\n            }, {\n                start: 3.5, end: 4.5, text: 'Spring', color: 'url(#spring)',\n                textStyle: { size: '18px', color: '#ffffff', fontWeight: '600' },\n                border: { width: 0 }, rotation: -90, visible: true\n            }, {\n                start: 4.5, end: 5.5, text: 'Autumn', color: 'url(#autumn)',\n                textStyle: { size: '18px', color: '#ffffff', fontWeight: '600' },\n                border: { width: 0 }, rotation: -90, visible: true\n            }, {\n                start: 5.5, end: 7, text: 'Winter', color: 'url(#winter)',\n                textStyle: { size: '18px', color: '#ffffff', fontWeight: '600' },\n                border: { width: 0 }, rotation: -90, visible: true\n            }\n        ]\n    };\n    //Initializing Primary Y Axis\n    public primaryYAxis: Object = {\n        minimum: 10, maximum: 40, interval: 5,\n        lineStyle: { color: '#808080' }, labelFormat: '{value} Â°C', rangePadding: 'None',\n        //Initializing Striplines\n        stripLines: [\n            {\n                start: 30, end: 40, text: 'High Temperature', color: '#ff512f', visible: false,\n                textStyle: { size: '18px', color: '#ffffff', fontWeight: '600' }, border: { width: 0 },\n            }, {\n                start: 20, end: 30, text: 'Average Temperature', color: '#fc902a', visible: false,\n                textStyle: { size: '18px', color: '#ffffff', fontWeight: '600' }, border: { width: 0 },\n            }, {\n                start: 10, end: 20, text: 'Low Temperature', visible: false,\n                textStyle: { size: '18px', color: '#ffffff', fontWeight: '600' }, border: { width: 0 }, color: '#f9d423'\n            }\n        ]\n    };\n    public marker: Object = {\n        visible: true, width: 10, height: 10, border: { width: 2, color: '#ffffff' }, fill: '#666666'\n    };\n    public tooltip: Object = {\n        enable: true\n    };\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n    };\n    public title: string = 'Weather Report';\n    @ViewChild('chart')\n    public chart: ChartComponent;\n    public mode: DropDownList;\n    ngOnInit(): void {\n        this.mode = new DropDownList({\n            index: 0,\n            width: 100,\n            change: () => {\n                let mode: string = this.mode.value.toString();\n                if (mode === 'Vertical') {\n                    for (let i: number = 0; i <= 4; i++) {\n                        if (i === 3 || i === 4) { this.chart.primaryYAxis.stripLines[i] = {}; }\n                        this.chart.primaryYAxis.stripLines[i].visible = false;\n                        this.chart.primaryXAxis.stripLines[i].visible = true;\n                    }\n                } else {\n                    for (let i: number = 0; i <= 4; i++) {\n                        this.chart.primaryYAxis.stripLines[i].visible = true;\n                        this.chart.primaryXAxis.stripLines[i].visible = false;\n                    }\n                }\n                this.chart.refresh();\n            }\n        });\n        this.mode.appendTo('#selmode');\n    }\n    ;\n\n}","stripline.html":"<div id=\"action-description\">\n    <p>\n        This sample demonstrates strip lines for an axis to highlight a particular region. Orientation can be changed by <code>StripLine Orientation</code> in properities panel.\n    </p>\n</div>\n<div class=\"control-section\">\n    <div class=\"col-lg-8\">\n        <ej-chart #chart style='display:block;' id='chartcontainer' [primaryXAxis]='primaryXAxis' [primaryYAxis]='primaryYAxis' [title]='title'\n            [tooltip]='tooltip' (load)='load($event)'>\n            <e-series-collection>\n                <e-series [dataSource]='data' type='Line' xName='x' yName='y' name='' [marker]='marker' width=4 fill='white'>\n                </e-series>\n            </e-series-collection>\n        </ej-chart>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" class=\"property-panel-table\" title=\"Properties\" style=\"width: 100%\">\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 60%\">\n                            <div>StripLine Orientation:</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div>\n                                <select name=\"selectIndex\" autocomplete=\"off\" id=\"selmode\" style=\"width:90%\">\n                                    <option value=\"Vertical\">Vertical</option>\n                                    <option value=\"Horizontal\">Horizontal</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n\n    #control-container {\n        padding: 0px !important;\n    }\n\n    #winter stop {\n        stop-color: #4ca1af;\n    }\n\n    #winter stop[offset=\"0\"] {\n        stop-color: #c4e0e5;\n    }\n\n    #winter stop[offset=\"1\"] {\n        stop-color: #4ca1af;\n    }\n\n    #summer stop {\n        stop-color: #ffa751;\n    }\n\n    #summer stop[offset=\"0\"] {\n        stop-color: #ffe259;\n    }\n\n    #summer stop[offset=\"1\"] {\n        stop-color: #ffa751;\n    }\n\n    #spring stop {\n        stop-color: #1d976c;\n    }\n\n    #spring stop[offset=\"0\"] {\n        stop-color: #93f9b9;\n    }\n\n    #spring stop[offset=\"1\"] {\n        stop-color: #1d976c;\n    }\n\n    #autumn stop {\n        stop-color: #603813;\n    }\n\n    #autumn stop[offset=\"0\"] {\n        stop-color: #b29f94;\n    }\n\n    #autumn stop[offset=\"1\"] {\n        stop-color: #603813;\n    }\n</style>\n<svg style=\"height: 0\">\n    <defs>\n        <linearGradient id=\"winter\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\" />\n            <stop offset=\"1\" />\n        </linearGradient>\n        <linearGradient id=\"summer\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\" />\n            <stop offset=\"1\" />\n        </linearGradient>\n        <linearGradient id=\"spring\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\" />\n            <stop offset=\"1\" />\n        </linearGradient>\n        <linearGradient id=\"autumn\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\" />\n            <stop offset=\"1\" />\n        </linearGradient>\n    </defs>\n</svg>","chart.style.css":".control-fluid {\n    padding: 0px !important;\n}","index.html":"<!DOCTYPE html>\n<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\n        \n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}