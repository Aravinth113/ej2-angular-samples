{"common/shared.module":"import { NgModule } from '@angular/core';\nimport { ButtonModule } from '@syncfusion/ej2-ng-buttons';\nimport { ListViewModule } from '@syncfusion/ej2-ng-lists';\nimport { DropDownListModule } from '@syncfusion/ej2-ng-dropdowns';\nimport { TreeViewModule, TabModule } from '@syncfusion/ej2-ng-navigations';\n\n\n\n@NgModule({\n    imports: [\n        ButtonModule,\n        ListViewModule,\n        DropDownListModule,\n        TreeViewModule,\n        TabModule\n\n    ],\n    \n    exports: [\n        ButtonModule,\n        TreeViewModule,\n        ListViewModule,\n        DropDownListModule,\n        TabModule\n    ]\n})\nexport class SharedModule { }","app.module":"import { PolarAreaChartComponent } from './polar-area.component';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'rxjs/add/operator/map';\n/**\n * Chart Control\n */\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\n\nimport { ButtonModule } from '@syncfusion/ej2-ng-buttons';\nimport { NumericTextBoxModule } from '@syncfusion/ej2-ng-inputs';\nimport { ChartAllModule, AccumulationChartAllModule } from '@syncfusion/ej2-ng-charts';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { SharedModule } from './common/shared.module';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n    imports: [ChartAllModule, SharedModule, ButtonModule, AccumulationChartAllModule, NumericTextBoxModule, HttpModule, JsonpModule, BrowserModule],\ndeclarations: [PolarAreaChartComponent],\nbootstrap: [PolarAreaChartComponent]\n})\nexport class AppModule { }","polar-area.component":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ILoadedEventArgs, ChartComponent, ChartTheme } from '@syncfusion/ej2-ng-charts';\nimport { ChartSeriesType } from '@syncfusion/ej2-charts';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { Browser } from '@syncfusion/ej2-base';\n\n/**\n * Area Series\n */\n@Component({\n    selector: 'control-content',\n    templateUrl: 'polar-area.html',\n    styleUrls: ['chart.style.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PolarAreaChartComponent {\n\n    public data: Object[] = [\n        { x: '2000', y: 4 }, { x: '2001', y: 3.0 },\n        { x: '2002', y: 3.8 }, { x: '2003', y: 3.4 },\n        { x: '2004', y: 3.2 }, { x: '2005', y: 3.9 }\n    ];\n    public data1: Object[] = [\n        { x: '2000', y: 2.6 }, { x: '2001', y: 2.8 },\n        { x: '2002', y: 2.6 }, { x: '2003', y: 3 },\n        { x: '2004', y: 3.6 }, { x: '2005', y: 3 }\n    ];\n    public data2: Object[] = [\n        { x: '2000', y: 2.8 }, { x: '2001', y: 2.5 },\n        { x: '2002', y: 2.8 }, { x: '2003', y: 3.2 },\n        { x: '2004', y: 2.9 }, { x: '2005', y: 2 }\n    ];\n    //Initializing Primary X Axis\n    public primaryXAxis: Object = {\n        valueType: 'Category',\n        labelPlacement: 'OnTicks',\n        interval: 1,\n        coefficient: Browser.isDevice ? 80 : 100\n    };\n    //Initializing Primary Y Axis\n    public primaryYAxis: Object = {\n        title: 'Revenue in Millions',\n        minimum: 0,\n        maximum: 4,\n        interval: 1,\n        labelFormat: '{value}M'\n    };\n    public marker: Object = {\n        visible: false\n    };\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n    };\n    public title: string = 'Average Sales Comparison';\n    @ViewChild('chart')\n    public chart: ChartComponent;\n    public seriesType: DropDownList;\n    ngOnInit(): void {\n        this.seriesType = new DropDownList({\n            index: 0,\n            width: 80,\n            change: () => {\n                let type: string = this.seriesType.value.toString();\n                this.chart.series[0].type = <ChartSeriesType>type;\n                this.chart.series[1].type = <ChartSeriesType>type;\n                this.chart.series[2].type = <ChartSeriesType>type;\n                this.chart.refresh();\n            }\n        });\n        this.seriesType.appendTo('#selmode');\n    }\n    ;\n}","polar-area.html":"<div class=\"control-section\">\n    <div class=\"col-lg-9\">\n        <ej-chart #chart style='display:block;' [title]='title' [primaryXAxis]='primaryXAxis' [primaryYAxis]='primaryYAxis' (load)='load($event)'>\n            <e-series-collection>\n                <e-series [dataSource]='data' type='Polar' [marker]='marker' drawType='Area' xName='x' yName='y' name='Product A' opacity=0.5 width=2 border-color='transparent'>\n                </e-series>\n                <e-series [dataSource]='data1' type='Polar' [marker]='marker' drawType='Area' xName='x' yName='y' name='Product B' opacity=0.5 width=2 border-color='transparent'>\n                </e-series>\n                <e-series [dataSource]='data2' type='Polar' [marker]='marker' drawType='Area' xName='x' yName='y' name='Product C' opacity=0.5 width=2 border-color='transparent'>\n                </e-series>\n            </e-series-collection>\n        </ej-chart>\n    </div>\n    <div class=\"col-lg-3 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" class=\"property-panel-table\" title=\"Properties\" style=\"width: 100%\">\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 50%\">\n                            <div>Series Type:</div>\n                        </td>\n                        <td style=\"width: 50%;\">\n                            <div>\n                                <select name=\"selectIndex\" autocomplete=\"off\" id=\"selmode\" style=\"width:90%\">\n                                     <option value=\"Polar\">Polar</option>\n                                     <option value=\"Radar\">Radar</option>\n                                 </select>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>","chart.style.css":".control-fluid {\n    padding: 0px !important;\n}","index.html":"<!DOCTYPE html>\n<html>\n    \n    <head>\n        <meta name=\"author\" content=\"Syncfusion\" />\n        <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\" />\n        <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.6.25/zone.min.js\"></script>\n        <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n        <script src=\"systemjs.config.js\"></script>\n    </head>\n    \n    <body>\n        <control-content>\n            <div id='loader'>Loading...</div>\n        </control-content>\n    </body>\n    \n    </html>\n    ","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\",\n        \"angular:\": \"https://unpkg.com/@angular/\"\n    },\n    map: {\n        main: 'main.ts',\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\n        \n        \"@syncfusion/ej2-ng-base\": \"syncfusion:ej2-ng-base/dist/ej2-ng-base.umd.min.js\",\n        \"@syncfusion/ej2-ng-buttons\": \"syncfusion:ej2-ng-buttons/dist/ej2-ng-buttons.umd.min.js\",\n        \"@syncfusion/ej2-ng-calendars\": \"syncfusion:ej2-ng-calendars/dist/ej2-ng-calendars.umd.min.js\",\n        \"@syncfusion/ej2-ng-charts\": \"syncfusion:ej2-ng-charts/dist/ej2-ng-charts.umd.min.js\",\n        \"@syncfusion/ej2-ng-circulargauge\": \"syncfusion:ej2-ng-circulargauge/dist/ej2-ng-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-ng-data\": \"syncfusion:ej2-ng-data/dist/ej2-ng-data.umd.min.js\",\n        \"@syncfusion/ej2-ng-dropdowns\": \"syncfusion:ej2-ng-dropdowns/dist/ej2-ng-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-ng-grids\": \"syncfusion:ej2-ng-grids/dist/ej2-ng-grids.umd.min.js\",\n        \"@syncfusion/ej2-ng-inputs\": \"syncfusion:ej2-ng-inputs/dist/ej2-ng-inputs.umd.min.js\",\n        \"@syncfusion/ej2-ng-lists\": \"syncfusion:ej2-ng-lists/dist/ej2-ng-lists.umd.min.js\",\n        \"@syncfusion/ej2-ng-navigations\": \"syncfusion:ej2-ng-navigations/dist/ej2-ng-navigations.umd.min.js\",\n        \"@syncfusion/ej2-ng-popups\": \"syncfusion:ej2-ng-popups/dist/ej2-ng-popups.umd.min.js\",\n        \"@syncfusion/ej2-ng-lineargauge\": \"syncfusion:ej2-ng-lineargauge/dist/ej2-ng-lineargauge.umd.min.js\",\n\n        '@angular/core': 'angular:core/bundles/core.umd.js',\n        '@angular/common': 'angular:common/bundles/common.umd.js',\n        '@angular/compiler': 'angular:compiler/bundles/compiler.umd.js',\n        '@angular/http': 'angular:http/bundles/http.umd.js',\n        '@angular/forms': 'angular:forms/bundles/forms.umd.js',\n        '@angular/router': 'angular:router/bundles/router.umd.js',\n        '@angular/platform-browser': 'angular:platform-browser/bundles/platform-browser.umd.js',\n        '@angular/platform-browser-dynamic': 'angular:platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n        '@angular/material': 'angular:material/bundles/material.umd.js',\n        'rxjs': 'https://unpkg.com/rxjs'\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('main.ts').catch(console.error.bind(console));\n","main.ts":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app.module';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);"}